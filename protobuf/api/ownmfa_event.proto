syntax = "proto3";
package ownmfa.api;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "validate/validate.proto";

option go_package = "github.com/ownmfa/api/go/api";

// EventService contains functions to query identity events.
service EventService {
  // List all events for an identity in an [end, start) time range, in descending timestamp order. Events are generated by identity actions.
  rpc ListEvents(ListEventsRequest) returns (ListEventsResponse) {
    option (google.api.http) = {
      get: "/v1/events"
    };
  }

  // List the latest event for each of an organization's identities. Events are generated by identity actions.
  rpc LatestEvents(LatestEventsRequest) returns (LatestEventsResponse) {
    option (google.api.http) = {
      get: "/v1/events/latest"
    };
  }
}

// EventStatus represents the status of an event.
enum EventStatus {
  // Event status is not specified.
  EVENT_STATUS_UNSPECIFIED = 0;

  // Identity was successfully created.
  IDENTITY_CREATED = 1;

  // Challenge was successfully sent.
  CHALLENGE_SENT = 2;

  // Challenge was requested, but was not required by the identity's authentication method.
  CHALLENGE_NOOP = 3;

  // Challenge failed to send. The Event error field will be populated.
  CHALLENGE_FAIL = 4;

  // Identity was successfully activated.
  ACTIVATE_SUCCESS = 5;

  // Identity failed to activate. The Event error field will be populated.
  ACTIVATE_FAIL = 6;

  // Identity was successfully verified.
  VERIFY_SUCCESS = 7;

  // Identity failed to verify. The Event error field will be populated.
  VERIFY_FAIL = 8;

  // Identity was successfully deleted.
  IDENTITY_DELETED = 9;
}

// Event represents an event as stored in the database.
message Event {
  // Organization ID (UUID).
  string org_id = 1 [json_name = "orgID"];

  // Application ID (UUID).
  string app_id = 2 [json_name = "appID"];

  // Identity ID (UUID).
  string identity_id = 3 [json_name = "identityID"];

  // Event status.
  EventStatus status = 4;

  // Error message. This field will be empty if no error was encountered.
  string error = 5;

  // Event creation timestamp.
  google.protobuf.Timestamp created_at = 6;

  // Trace ID (UUID).
  string trace_id = 7;
}

// ListEventsRequest is sent to list identity events in an [end, start) time range, in descending timestamp order.
message ListEventsRequest {
  // Identity ID (UUID).
  string identity_id = 1 [json_name = "identityID", (validate.rules).string.uuid = true, (google.api.field_behavior) = REQUIRED];

  // Events range end time. Defaults to current time if not specified. Maximum supported time range is 90 days.
  google.protobuf.Timestamp end_time = 2;

  // Events range start time. Defaults to end_time - 24 hours if not specified or after end_time. Maximum supported time range is 90 days.
  google.protobuf.Timestamp start_time = 3;
}

// ListEventsResponse is sent in response to an identity events list.
message ListEventsResponse {
  // Event array, ordered by descending created_at timestamp.
  repeated Event events = 1;
}

// LatestEventsRequest is sent to list latest organization events.
message LatestEventsRequest {
  // Application ID (UUID). If not specified, all applications are included.
  string app_id = 1 [json_name = "appID", (validate.rules).string = {ignore_empty: true, uuid: true}];

  // Identity ID (UUID). If not specified, all identities are included.
  string identity_id = 2 [json_name = "identityID", (validate.rules).string = {ignore_empty: true, uuid: true}];
}

// LatestEventsResponse is sent in response to an organization latest list.
message LatestEventsResponse {
  // Event array, ordered by descending created_at timestamp.
  repeated Event events = 1;
}
