# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: api/ownmfa_user.proto for package 'ownmfa.api'

require 'grpc'
require 'api/ownmfa_user_pb'

module Ownmfa
  module Api
    module UserService
      # UserService contains functions to query and modify users.
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'ownmfa.api.UserService'

        # Create a user. Users can log in and use the Hermes API and OwnMFA website based on the limits of their role.
        rpc :CreateUser, ::Ownmfa::Api::CreateUserRequest, ::Ownmfa::Api::User
        # Get a user by ID. Users can log in and use the Hermes API and OwnMFA website based on the limits of their role.
        rpc :GetUser, ::Ownmfa::Api::GetUserRequest, ::Ownmfa::Api::User
        # Update a user. Users can log in and use the Hermes API and OwnMFA website based on the limits of their role.
        rpc :UpdateUser, ::Ownmfa::Api::UpdateUserRequest, ::Ownmfa::Api::User
        # Update a user's password. Passwords are checked against NIST password guidelines.
        rpc :UpdateUserPassword, ::Ownmfa::Api::UpdateUserPasswordRequest, ::Google::Protobuf::Empty
        # Delete a user by ID. Users can log in and use the Hermes API and OwnMFA website based on the limits of their role.
        rpc :DeleteUser, ::Ownmfa::Api::DeleteUserRequest, ::Google::Protobuf::Empty
        # List users. Users can log in and use the Hermes API and OwnMFA website based on the limits of their role.
        rpc :ListUsers, ::Ownmfa::Api::ListUsersRequest, ::Ownmfa::Api::ListUsersResponse
      end

      Stub = Service.rpc_stub_class
    end
  end
end
