<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/ownmfa_session.proto

namespace Ownmfa\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * LoginResponse is sent in response to a user login.
 *
 * Generated from protobuf message <code>ownmfa.api.LoginResponse</code>
 */
class LoginResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Token to be used for subsequent non-login calls.
     *
     * Generated from protobuf field <code>string token = 1;</code>
     */
    protected $token = '';
    /**
     * Token expiration timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 2;</code>
     */
    protected $expires_at = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $token
     *           Token to be used for subsequent non-login calls.
     *     @type \Google\Protobuf\Timestamp $expires_at
     *           Token expiration timestamp.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api\OwnmfaSession::initOnce();
        parent::__construct($data);
    }

    /**
     * Token to be used for subsequent non-login calls.
     *
     * Generated from protobuf field <code>string token = 1;</code>
     * @return string
     */
    public function getToken()
    {
        return $this->token;
    }

    /**
     * Token to be used for subsequent non-login calls.
     *
     * Generated from protobuf field <code>string token = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->token = $var;

        return $this;
    }

    /**
     * Token expiration timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpiresAt()
    {
        return $this->expires_at;
    }

    public function hasExpiresAt()
    {
        return isset($this->expires_at);
    }

    public function clearExpiresAt()
    {
        unset($this->expires_at);
    }

    /**
     * Token expiration timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpiresAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expires_at = $var;

        return $this;
    }

}

