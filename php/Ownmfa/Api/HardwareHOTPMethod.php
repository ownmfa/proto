<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/ownmfa_app_identity.proto

namespace Ownmfa\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * HardwareHOTPMethod configures a hardware OATH HOTP one-time password method.
 *
 * Generated from protobuf message <code>ownmfa.api.HardwareHOTPMethod</code>
 */
class HardwareHOTPMethod extends \Google\Protobuf\Internal\Message
{
    /**
     * Hardware HOTP hash function. Defaults to SHA512 if not specified.
     *
     * Generated from protobuf field <code>.ownmfa.api.Hash hash = 1;</code>
     */
    protected $hash = 0;
    /**
     * Passcode digits length.
     *
     * Generated from protobuf field <code>int32 digits = 2 [(.validate.rules) = {</code>
     */
    protected $digits = 0;
    /**
     * Hardware HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
     *
     * Generated from protobuf field <code>int32 counter = 3;</code>
     */
    protected $counter = 0;
    /**
     * Hardware HOTP secret. Only included during identity creation. When used in JSON, the value will be represented as a base64 string.
     *
     * Generated from protobuf field <code>bytes secret = 4 [(.validate.rules) = {</code>
     */
    protected $secret = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $hash
     *           Hardware HOTP hash function. Defaults to SHA512 if not specified.
     *     @type int $digits
     *           Passcode digits length.
     *     @type int $counter
     *           Hardware HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
     *     @type string $secret
     *           Hardware HOTP secret. Only included during identity creation. When used in JSON, the value will be represented as a base64 string.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api\OwnmfaAppIdentity::initOnce();
        parent::__construct($data);
    }

    /**
     * Hardware HOTP hash function. Defaults to SHA512 if not specified.
     *
     * Generated from protobuf field <code>.ownmfa.api.Hash hash = 1;</code>
     * @return int
     */
    public function getHash()
    {
        return $this->hash;
    }

    /**
     * Hardware HOTP hash function. Defaults to SHA512 if not specified.
     *
     * Generated from protobuf field <code>.ownmfa.api.Hash hash = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setHash($var)
    {
        GPBUtil::checkEnum($var, \Ownmfa\Api\Hash::class);
        $this->hash = $var;

        return $this;
    }

    /**
     * Passcode digits length.
     *
     * Generated from protobuf field <code>int32 digits = 2 [(.validate.rules) = {</code>
     * @return int
     */
    public function getDigits()
    {
        return $this->digits;
    }

    /**
     * Passcode digits length.
     *
     * Generated from protobuf field <code>int32 digits = 2 [(.validate.rules) = {</code>
     * @param int $var
     * @return $this
     */
    public function setDigits($var)
    {
        GPBUtil::checkInt32($var);
        $this->digits = $var;

        return $this;
    }

    /**
     * Hardware HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
     *
     * Generated from protobuf field <code>int32 counter = 3;</code>
     * @return int
     */
    public function getCounter()
    {
        return $this->counter;
    }

    /**
     * Hardware HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
     *
     * Generated from protobuf field <code>int32 counter = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setCounter($var)
    {
        GPBUtil::checkInt32($var);
        $this->counter = $var;

        return $this;
    }

    /**
     * Hardware HOTP secret. Only included during identity creation. When used in JSON, the value will be represented as a base64 string.
     *
     * Generated from protobuf field <code>bytes secret = 4 [(.validate.rules) = {</code>
     * @return string
     */
    public function getSecret()
    {
        return $this->secret;
    }

    /**
     * Hardware HOTP secret. Only included during identity creation. When used in JSON, the value will be represented as a base64 string.
     *
     * Generated from protobuf field <code>bytes secret = 4 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setSecret($var)
    {
        GPBUtil::checkString($var, False);
        $this->secret = $var;

        return $this;
    }

}

