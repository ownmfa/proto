<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/ownmfa_session.proto

namespace Ownmfa\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * CreateKeyResponse is sent in response to an API key creation.
 *
 * Generated from protobuf message <code>ownmfa.api.CreateKeyResponse</code>
 */
class CreateKeyResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Key message created.
     *
     * Generated from protobuf field <code>.ownmfa.api.Key key = 1;</code>
     */
    protected $key = null;
    /**
     * Token to be used for subsequent calls. Only returned once, upon key creation.
     *
     * Generated from protobuf field <code>string token = 2;</code>
     */
    protected $token = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Ownmfa\Api\Key $key
     *           Key message created.
     *     @type string $token
     *           Token to be used for subsequent calls. Only returned once, upon key creation.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api\OwnmfaSession::initOnce();
        parent::__construct($data);
    }

    /**
     * Key message created.
     *
     * Generated from protobuf field <code>.ownmfa.api.Key key = 1;</code>
     * @return \Ownmfa\Api\Key|null
     */
    public function getKey()
    {
        return $this->key;
    }

    public function hasKey()
    {
        return isset($this->key);
    }

    public function clearKey()
    {
        unset($this->key);
    }

    /**
     * Key message created.
     *
     * Generated from protobuf field <code>.ownmfa.api.Key key = 1;</code>
     * @param \Ownmfa\Api\Key $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkMessage($var, \Ownmfa\Api\Key::class);
        $this->key = $var;

        return $this;
    }

    /**
     * Token to be used for subsequent calls. Only returned once, upon key creation.
     *
     * Generated from protobuf field <code>string token = 2;</code>
     * @return string
     */
    public function getToken()
    {
        return $this->token;
    }

    /**
     * Token to be used for subsequent calls. Only returned once, upon key creation.
     *
     * Generated from protobuf field <code>string token = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->token = $var;

        return $this;
    }

}

