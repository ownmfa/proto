<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/ownmfa_app_identity.proto

namespace Ownmfa\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * SoftwareHOTPMethod configures a software OATH HOTP one-time password method.
 *
 * Generated from protobuf message <code>ownmfa.api.SoftwareHOTPMethod</code>
 */
class SoftwareHOTPMethod extends \Google\Protobuf\Internal\Message
{
    /**
     * Software HOTP hash function. Defaults to SHA512 if not specified.
     *
     * Generated from protobuf field <code>.ownmfa.api.Hash hash = 1;</code>
     */
    protected $hash = 0;
    /**
     * Passcode digits length. Defaults to 7 if not specified.
     *
     * Generated from protobuf field <code>int32 digits = 2 [(.validate.rules) = {</code>
     */
    protected $digits = 0;
    /**
     * Software HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
     *
     * Generated from protobuf field <code>int32 counter = 3;</code>
     */
    protected $counter = 0;
    /**
     * Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code.
     *
     * Generated from protobuf field <code>string account_name = 4 [(.validate.rules) = {</code>
     */
    protected $account_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $hash
     *           Software HOTP hash function. Defaults to SHA512 if not specified.
     *     @type int $digits
     *           Passcode digits length. Defaults to 7 if not specified.
     *     @type int $counter
     *           Software HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
     *     @type string $account_name
     *           Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Api\OwnmfaAppIdentity::initOnce();
        parent::__construct($data);
    }

    /**
     * Software HOTP hash function. Defaults to SHA512 if not specified.
     *
     * Generated from protobuf field <code>.ownmfa.api.Hash hash = 1;</code>
     * @return int
     */
    public function getHash()
    {
        return $this->hash;
    }

    /**
     * Software HOTP hash function. Defaults to SHA512 if not specified.
     *
     * Generated from protobuf field <code>.ownmfa.api.Hash hash = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setHash($var)
    {
        GPBUtil::checkEnum($var, \Ownmfa\Api\Hash::class);
        $this->hash = $var;

        return $this;
    }

    /**
     * Passcode digits length. Defaults to 7 if not specified.
     *
     * Generated from protobuf field <code>int32 digits = 2 [(.validate.rules) = {</code>
     * @return int
     */
    public function getDigits()
    {
        return $this->digits;
    }

    /**
     * Passcode digits length. Defaults to 7 if not specified.
     *
     * Generated from protobuf field <code>int32 digits = 2 [(.validate.rules) = {</code>
     * @param int $var
     * @return $this
     */
    public function setDigits($var)
    {
        GPBUtil::checkInt32($var);
        $this->digits = $var;

        return $this;
    }

    /**
     * Software HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
     *
     * Generated from protobuf field <code>int32 counter = 3;</code>
     * @return int
     */
    public function getCounter()
    {
        return $this->counter;
    }

    /**
     * Software HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
     *
     * Generated from protobuf field <code>int32 counter = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setCounter($var)
    {
        GPBUtil::checkInt32($var);
        $this->counter = $var;

        return $this;
    }

    /**
     * Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code.
     *
     * Generated from protobuf field <code>string account_name = 4 [(.validate.rules) = {</code>
     * @return string
     */
    public function getAccountName()
    {
        return $this->account_name;
    }

    /**
     * Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code.
     *
     * Generated from protobuf field <code>string account_name = 4 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setAccountName($var)
    {
        GPBUtil::checkString($var, True);
        $this->account_name = $var;

        return $this;
    }

}

