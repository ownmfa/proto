// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: api/ownmfa_org.proto
#ifndef GRPC_api_2fownmfa_5forg_2eproto__INCLUDED
#define GRPC_api_2fownmfa_5forg_2eproto__INCLUDED

#include "api/ownmfa_org.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace ownmfa {
namespace api {

// OrgService contains functions to query and modify organizations.
class OrgService final {
 public:
  static constexpr char const* service_full_name() {
    return "ownmfa.api.OrgService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create an organization. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status CreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::ownmfa::api::Org* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>> AsyncCreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>>(AsyncCreateOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>> PrepareAsyncCreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>>(PrepareAsyncCreateOrgRaw(context, request, cq));
    }
    // Get an organization by ID. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status GetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::ownmfa::api::Org* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>> AsyncGetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>>(AsyncGetOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>> PrepareAsyncGetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>>(PrepareAsyncGetOrgRaw(context, request, cq));
    }
    // Update an organization. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status UpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::ownmfa::api::Org* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>> AsyncUpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>>(AsyncUpdateOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>> PrepareAsyncUpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>>(PrepareAsyncUpdateOrgRaw(context, request, cq));
    }
    // Delete an organization by ID. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status DeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteOrgRaw(context, request, cq));
    }
    // List all organizations. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status ListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::ownmfa::api::ListOrgsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListOrgsResponse>> AsyncListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListOrgsResponse>>(AsyncListOrgsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListOrgsResponse>> PrepareAsyncListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListOrgsResponse>>(PrepareAsyncListOrgsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Create an organization. An organization is the top level resource and contains users, applications, and derived resources.
      virtual void CreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest* request, ::ownmfa::api::Org* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest* request, ::ownmfa::api::Org* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get an organization by ID. An organization is the top level resource and contains users, applications, and derived resources.
      virtual void GetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest* request, ::ownmfa::api::Org* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest* request, ::ownmfa::api::Org* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update an organization. An organization is the top level resource and contains users, applications, and derived resources.
      virtual void UpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest* request, ::ownmfa::api::Org* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest* request, ::ownmfa::api::Org* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete an organization by ID. An organization is the top level resource and contains users, applications, and derived resources.
      virtual void DeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List all organizations. An organization is the top level resource and contains users, applications, and derived resources.
      virtual void ListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest* request, ::ownmfa::api::ListOrgsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest* request, ::ownmfa::api::ListOrgsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>* AsyncCreateOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>* PrepareAsyncCreateOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>* AsyncGetOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>* PrepareAsyncGetOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>* AsyncUpdateOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::Org>* PrepareAsyncUpdateOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListOrgsResponse>* AsyncListOrgsRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListOrgsResponse>* PrepareAsyncListOrgsRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::ownmfa::api::Org* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>> AsyncCreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>>(AsyncCreateOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>> PrepareAsyncCreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>>(PrepareAsyncCreateOrgRaw(context, request, cq));
    }
    ::grpc::Status GetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::ownmfa::api::Org* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>> AsyncGetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>>(AsyncGetOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>> PrepareAsyncGetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>>(PrepareAsyncGetOrgRaw(context, request, cq));
    }
    ::grpc::Status UpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::ownmfa::api::Org* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>> AsyncUpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>>(AsyncUpdateOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>> PrepareAsyncUpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>>(PrepareAsyncUpdateOrgRaw(context, request, cq));
    }
    ::grpc::Status DeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteOrgRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteOrgRaw(context, request, cq));
    }
    ::grpc::Status ListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::ownmfa::api::ListOrgsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListOrgsResponse>> AsyncListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListOrgsResponse>>(AsyncListOrgsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListOrgsResponse>> PrepareAsyncListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListOrgsResponse>>(PrepareAsyncListOrgsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest* request, ::ownmfa::api::Org* response, std::function<void(::grpc::Status)>) override;
      void CreateOrg(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest* request, ::ownmfa::api::Org* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest* request, ::ownmfa::api::Org* response, std::function<void(::grpc::Status)>) override;
      void GetOrg(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest* request, ::ownmfa::api::Org* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest* request, ::ownmfa::api::Org* response, std::function<void(::grpc::Status)>) override;
      void UpdateOrg(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest* request, ::ownmfa::api::Org* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteOrg(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest* request, ::ownmfa::api::ListOrgsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListOrgs(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest* request, ::ownmfa::api::ListOrgsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>* AsyncCreateOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>* PrepareAsyncCreateOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>* AsyncGetOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>* PrepareAsyncGetOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::GetOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>* AsyncUpdateOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::Org>* PrepareAsyncUpdateOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::UpdateOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteOrgRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteOrgRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListOrgsResponse>* AsyncListOrgsRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListOrgsResponse>* PrepareAsyncListOrgsRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListOrgsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateOrg_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOrg_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateOrg_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteOrg_;
    const ::grpc::internal::RpcMethod rpcmethod_ListOrgs_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create an organization. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status CreateOrg(::grpc::ServerContext* context, const ::ownmfa::api::CreateOrgRequest* request, ::ownmfa::api::Org* response);
    // Get an organization by ID. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status GetOrg(::grpc::ServerContext* context, const ::ownmfa::api::GetOrgRequest* request, ::ownmfa::api::Org* response);
    // Update an organization. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status UpdateOrg(::grpc::ServerContext* context, const ::ownmfa::api::UpdateOrgRequest* request, ::ownmfa::api::Org* response);
    // Delete an organization by ID. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status DeleteOrg(::grpc::ServerContext* context, const ::ownmfa::api::DeleteOrgRequest* request, ::google::protobuf::Empty* response);
    // List all organizations. An organization is the top level resource and contains users, applications, and derived resources.
    virtual ::grpc::Status ListOrgs(::grpc::ServerContext* context, const ::ownmfa::api::ListOrgsRequest* request, ::ownmfa::api::ListOrgsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateOrg() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateOrg(::grpc::ServerContext* context, ::ownmfa::api::CreateOrgRequest* request, ::grpc::ServerAsyncResponseWriter< ::ownmfa::api::Org>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetOrg() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::GetOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOrg(::grpc::ServerContext* context, ::ownmfa::api::GetOrgRequest* request, ::grpc::ServerAsyncResponseWriter< ::ownmfa::api::Org>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateOrg() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::UpdateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateOrg(::grpc::ServerContext* context, ::ownmfa::api::UpdateOrgRequest* request, ::grpc::ServerAsyncResponseWriter< ::ownmfa::api::Org>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteOrg() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteOrgRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteOrg(::grpc::ServerContext* context, ::ownmfa::api::DeleteOrgRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListOrgs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListOrgs() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListOrgs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrgs(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListOrgsRequest* /*request*/, ::ownmfa::api::ListOrgsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListOrgs(::grpc::ServerContext* context, ::ownmfa::api::ListOrgsRequest* request, ::grpc::ServerAsyncResponseWriter< ::ownmfa::api::ListOrgsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateOrg<WithAsyncMethod_GetOrg<WithAsyncMethod_UpdateOrg<WithAsyncMethod_DeleteOrg<WithAsyncMethod_ListOrgs<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateOrg() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::CreateOrgRequest, ::ownmfa::api::Org>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ownmfa::api::CreateOrgRequest* request, ::ownmfa::api::Org* response) { return this->CreateOrg(context, request, response); }));}
    void SetMessageAllocatorFor_CreateOrg(
        ::grpc::MessageAllocator< ::ownmfa::api::CreateOrgRequest, ::ownmfa::api::Org>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::CreateOrgRequest, ::ownmfa::api::Org>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::ownmfa::api::CreateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetOrg() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::GetOrgRequest, ::ownmfa::api::Org>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ownmfa::api::GetOrgRequest* request, ::ownmfa::api::Org* response) { return this->GetOrg(context, request, response); }));}
    void SetMessageAllocatorFor_GetOrg(
        ::grpc::MessageAllocator< ::ownmfa::api::GetOrgRequest, ::ownmfa::api::Org>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::GetOrgRequest, ::ownmfa::api::Org>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::GetOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::ownmfa::api::GetOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateOrg() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::UpdateOrgRequest, ::ownmfa::api::Org>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ownmfa::api::UpdateOrgRequest* request, ::ownmfa::api::Org* response) { return this->UpdateOrg(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateOrg(
        ::grpc::MessageAllocator< ::ownmfa::api::UpdateOrgRequest, ::ownmfa::api::Org>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::UpdateOrgRequest, ::ownmfa::api::Org>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::UpdateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::ownmfa::api::UpdateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteOrg() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::DeleteOrgRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ownmfa::api::DeleteOrgRequest* request, ::google::protobuf::Empty* response) { return this->DeleteOrg(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteOrg(
        ::grpc::MessageAllocator< ::ownmfa::api::DeleteOrgRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::DeleteOrgRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteOrgRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::ownmfa::api::DeleteOrgRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListOrgs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListOrgs() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::ListOrgsRequest, ::ownmfa::api::ListOrgsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ownmfa::api::ListOrgsRequest* request, ::ownmfa::api::ListOrgsResponse* response) { return this->ListOrgs(context, request, response); }));}
    void SetMessageAllocatorFor_ListOrgs(
        ::grpc::MessageAllocator< ::ownmfa::api::ListOrgsRequest, ::ownmfa::api::ListOrgsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::ListOrgsRequest, ::ownmfa::api::ListOrgsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListOrgs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrgs(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListOrgsRequest* /*request*/, ::ownmfa::api::ListOrgsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListOrgs(
      ::grpc::CallbackServerContext* /*context*/, const ::ownmfa::api::ListOrgsRequest* /*request*/, ::ownmfa::api::ListOrgsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateOrg<WithCallbackMethod_GetOrg<WithCallbackMethod_UpdateOrg<WithCallbackMethod_DeleteOrg<WithCallbackMethod_ListOrgs<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateOrg() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetOrg() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::GetOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateOrg() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::UpdateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteOrg() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteOrgRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListOrgs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListOrgs() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListOrgs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrgs(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListOrgsRequest* /*request*/, ::ownmfa::api::ListOrgsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateOrg() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateOrg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetOrg() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::GetOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOrg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateOrg() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::UpdateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateOrg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteOrg() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteOrgRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteOrg(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListOrgs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListOrgs() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListOrgs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrgs(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListOrgsRequest* /*request*/, ::ownmfa::api::ListOrgsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListOrgs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateOrg() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateOrg(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetOrg() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetOrg(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::GetOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateOrg() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateOrg(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::UpdateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteOrg() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteOrg(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteOrgRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteOrg(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListOrgs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListOrgs() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListOrgs(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListOrgs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrgs(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListOrgsRequest* /*request*/, ::ownmfa::api::ListOrgsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListOrgs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateOrg() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ownmfa::api::CreateOrgRequest, ::ownmfa::api::Org>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ownmfa::api::CreateOrgRequest, ::ownmfa::api::Org>* streamer) {
                       return this->StreamedCreateOrg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateOrg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ownmfa::api::CreateOrgRequest,::ownmfa::api::Org>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetOrg() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ownmfa::api::GetOrgRequest, ::ownmfa::api::Org>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ownmfa::api::GetOrgRequest, ::ownmfa::api::Org>* streamer) {
                       return this->StreamedGetOrg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::GetOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOrg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ownmfa::api::GetOrgRequest,::ownmfa::api::Org>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateOrg() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ownmfa::api::UpdateOrgRequest, ::ownmfa::api::Org>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ownmfa::api::UpdateOrgRequest, ::ownmfa::api::Org>* streamer) {
                       return this->StreamedUpdateOrg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::UpdateOrgRequest* /*request*/, ::ownmfa::api::Org* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateOrg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ownmfa::api::UpdateOrgRequest,::ownmfa::api::Org>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteOrg : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteOrg() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ownmfa::api::DeleteOrgRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ownmfa::api::DeleteOrgRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteOrg(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteOrg() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteOrg(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteOrgRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteOrg(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ownmfa::api::DeleteOrgRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListOrgs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListOrgs() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ownmfa::api::ListOrgsRequest, ::ownmfa::api::ListOrgsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ownmfa::api::ListOrgsRequest, ::ownmfa::api::ListOrgsResponse>* streamer) {
                       return this->StreamedListOrgs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListOrgs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListOrgs(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListOrgsRequest* /*request*/, ::ownmfa::api::ListOrgsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListOrgs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ownmfa::api::ListOrgsRequest,::ownmfa::api::ListOrgsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateOrg<WithStreamedUnaryMethod_GetOrg<WithStreamedUnaryMethod_UpdateOrg<WithStreamedUnaryMethod_DeleteOrg<WithStreamedUnaryMethod_ListOrgs<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateOrg<WithStreamedUnaryMethod_GetOrg<WithStreamedUnaryMethod_UpdateOrg<WithStreamedUnaryMethod_DeleteOrg<WithStreamedUnaryMethod_ListOrgs<Service > > > > > StreamedService;
};

}  // namespace api
}  // namespace ownmfa


#endif  // GRPC_api_2fownmfa_5forg_2eproto__INCLUDED
