// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/ownmfa_org.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_api_2fownmfa_5forg_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_api_2fownmfa_5forg_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "api/ownmfa_status.pb.h"
#include "google/protobuf/empty.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/field_mask.pb.h"
#include "google/api/annotations.pb.h"
#include "google/api/field_behavior.pb.h"
#include "protoc-gen-openapiv2/options/annotations.pb.h"
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_api_2fownmfa_5forg_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_api_2fownmfa_5forg_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_api_2fownmfa_5forg_2eproto;
namespace ownmfa {
namespace api {
class CreateOrgRequest;
struct CreateOrgRequestDefaultTypeInternal;
extern CreateOrgRequestDefaultTypeInternal _CreateOrgRequest_default_instance_;
class DeleteOrgRequest;
struct DeleteOrgRequestDefaultTypeInternal;
extern DeleteOrgRequestDefaultTypeInternal _DeleteOrgRequest_default_instance_;
class GetOrgRequest;
struct GetOrgRequestDefaultTypeInternal;
extern GetOrgRequestDefaultTypeInternal _GetOrgRequest_default_instance_;
class ListOrgsRequest;
struct ListOrgsRequestDefaultTypeInternal;
extern ListOrgsRequestDefaultTypeInternal _ListOrgsRequest_default_instance_;
class ListOrgsResponse;
struct ListOrgsResponseDefaultTypeInternal;
extern ListOrgsResponseDefaultTypeInternal _ListOrgsResponse_default_instance_;
class Org;
struct OrgDefaultTypeInternal;
extern OrgDefaultTypeInternal _Org_default_instance_;
class UpdateOrgRequest;
struct UpdateOrgRequestDefaultTypeInternal;
extern UpdateOrgRequestDefaultTypeInternal _UpdateOrgRequest_default_instance_;
}  // namespace api
}  // namespace ownmfa
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ownmfa {
namespace api {
enum Plan : int {
  PLAN_UNSPECIFIED = 0,
  PAYMENT_FAIL = 3,
  STARTER = 6,
  PRO = 9,
  ENTERPRISE = 12,
  Plan_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Plan_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Plan_IsValid(int value);
constexpr Plan Plan_MIN = static_cast<Plan>(0);
constexpr Plan Plan_MAX = static_cast<Plan>(12);
constexpr int Plan_ARRAYSIZE = 12 + 1;
const ::google::protobuf::EnumDescriptor*
Plan_descriptor();
template <typename T>
const std::string& Plan_Name(T value) {
  static_assert(std::is_same<T, Plan>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Plan_Name().");
  return Plan_Name(static_cast<Plan>(value));
}
template <>
inline const std::string& Plan_Name(Plan value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Plan_descriptor,
                                                 0, 12>(
      static_cast<int>(value));
}
inline bool Plan_Parse(absl::string_view name, Plan* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Plan>(
      Plan_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Org final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ownmfa.api.Org) */ {
 public:
  inline Org() : Org(nullptr) {}
  ~Org() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Org(::google::protobuf::internal::ConstantInitialized);

  Org(const Org& from);
  Org(Org&& from) noexcept
    : Org() {
    *this = ::std::move(from);
  }

  inline Org& operator=(const Org& from) {
    CopyFrom(from);
    return *this;
  }
  inline Org& operator=(Org&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Org& default_instance() {
    return *internal_default_instance();
  }
  static inline const Org* internal_default_instance() {
    return reinterpret_cast<const Org*>(
               &_Org_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Org& a, Org& b) {
    a.Swap(&b);
  }
  inline void Swap(Org* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Org* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Org* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Org>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Org& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Org& from) {
    Org::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Org* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ownmfa.api.Org";
  }
  protected:
  explicit Org(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kCreatedAtFieldNumber = 3,
    kUpdatedAtFieldNumber = 4,
    kStatusFieldNumber = 5,
    kPlanFieldNumber = 6,
  };
  // string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string name = 2 [(.validate.rules) = {
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .google.protobuf.Timestamp created_at = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // .google.protobuf.Timestamp updated_at = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // .ownmfa.api.Status status = 5 [(.validate.rules) = {
  void clear_status() ;
  ::ownmfa::api::Status status() const;
  void set_status(::ownmfa::api::Status value);

  private:
  ::ownmfa::api::Status _internal_status() const;
  void _internal_set_status(::ownmfa::api::Status value);

  public:
  // .ownmfa.api.Plan plan = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  void clear_plan() ;
  ::ownmfa::api::Plan plan() const;
  void set_plan(::ownmfa::api::Plan value);

  private:
  ::ownmfa::api::Plan _internal_plan() const;
  void _internal_set_plan(::ownmfa::api::Plan value);

  public:
  // @@protoc_insertion_point(class_scope:ownmfa.api.Org)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 2, 29, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::Timestamp* created_at_;
    ::google::protobuf::Timestamp* updated_at_;
    int status_;
    int plan_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fownmfa_5forg_2eproto;
};// -------------------------------------------------------------------

class CreateOrgRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ownmfa.api.CreateOrgRequest) */ {
 public:
  inline CreateOrgRequest() : CreateOrgRequest(nullptr) {}
  ~CreateOrgRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CreateOrgRequest(::google::protobuf::internal::ConstantInitialized);

  CreateOrgRequest(const CreateOrgRequest& from);
  CreateOrgRequest(CreateOrgRequest&& from) noexcept
    : CreateOrgRequest() {
    *this = ::std::move(from);
  }

  inline CreateOrgRequest& operator=(const CreateOrgRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateOrgRequest& operator=(CreateOrgRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateOrgRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateOrgRequest* internal_default_instance() {
    return reinterpret_cast<const CreateOrgRequest*>(
               &_CreateOrgRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreateOrgRequest& a, CreateOrgRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateOrgRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateOrgRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateOrgRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreateOrgRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateOrgRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CreateOrgRequest& from) {
    CreateOrgRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateOrgRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ownmfa.api.CreateOrgRequest";
  }
  protected:
  explicit CreateOrgRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgFieldNumber = 1,
  };
  // .ownmfa.api.Org org = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  bool has_org() const;
  void clear_org() ;
  const ::ownmfa::api::Org& org() const;
  PROTOBUF_NODISCARD ::ownmfa::api::Org* release_org();
  ::ownmfa::api::Org* mutable_org();
  void set_allocated_org(::ownmfa::api::Org* value);
  void unsafe_arena_set_allocated_org(::ownmfa::api::Org* value);
  ::ownmfa::api::Org* unsafe_arena_release_org();

  private:
  const ::ownmfa::api::Org& _internal_org() const;
  ::ownmfa::api::Org* _internal_mutable_org();

  public:
  // @@protoc_insertion_point(class_scope:ownmfa.api.CreateOrgRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::ownmfa::api::Org* org_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fownmfa_5forg_2eproto;
};// -------------------------------------------------------------------

class GetOrgRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ownmfa.api.GetOrgRequest) */ {
 public:
  inline GetOrgRequest() : GetOrgRequest(nullptr) {}
  ~GetOrgRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrgRequest(::google::protobuf::internal::ConstantInitialized);

  GetOrgRequest(const GetOrgRequest& from);
  GetOrgRequest(GetOrgRequest&& from) noexcept
    : GetOrgRequest() {
    *this = ::std::move(from);
  }

  inline GetOrgRequest& operator=(const GetOrgRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrgRequest& operator=(GetOrgRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrgRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrgRequest* internal_default_instance() {
    return reinterpret_cast<const GetOrgRequest*>(
               &_GetOrgRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetOrgRequest& a, GetOrgRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOrgRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrgRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrgRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOrgRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrgRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetOrgRequest& from) {
    GetOrgRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetOrgRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ownmfa.api.GetOrgRequest";
  }
  protected:
  explicit GetOrgRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:ownmfa.api.GetOrgRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 35, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fownmfa_5forg_2eproto;
};// -------------------------------------------------------------------

class UpdateOrgRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ownmfa.api.UpdateOrgRequest) */ {
 public:
  inline UpdateOrgRequest() : UpdateOrgRequest(nullptr) {}
  ~UpdateOrgRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateOrgRequest(::google::protobuf::internal::ConstantInitialized);

  UpdateOrgRequest(const UpdateOrgRequest& from);
  UpdateOrgRequest(UpdateOrgRequest&& from) noexcept
    : UpdateOrgRequest() {
    *this = ::std::move(from);
  }

  inline UpdateOrgRequest& operator=(const UpdateOrgRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateOrgRequest& operator=(UpdateOrgRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateOrgRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateOrgRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateOrgRequest*>(
               &_UpdateOrgRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UpdateOrgRequest& a, UpdateOrgRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateOrgRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateOrgRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateOrgRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateOrgRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateOrgRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpdateOrgRequest& from) {
    UpdateOrgRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateOrgRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ownmfa.api.UpdateOrgRequest";
  }
  protected:
  explicit UpdateOrgRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgFieldNumber = 1,
    kUpdateMaskFieldNumber = 2,
  };
  // .ownmfa.api.Org org = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  bool has_org() const;
  void clear_org() ;
  const ::ownmfa::api::Org& org() const;
  PROTOBUF_NODISCARD ::ownmfa::api::Org* release_org();
  ::ownmfa::api::Org* mutable_org();
  void set_allocated_org(::ownmfa::api::Org* value);
  void unsafe_arena_set_allocated_org(::ownmfa::api::Org* value);
  ::ownmfa::api::Org* unsafe_arena_release_org();

  private:
  const ::ownmfa::api::Org& _internal_org() const;
  ::ownmfa::api::Org* _internal_mutable_org();

  public:
  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask() ;
  const ::google::protobuf::FieldMask& update_mask() const;
  PROTOBUF_NODISCARD ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* value);
  void unsafe_arena_set_allocated_update_mask(::google::protobuf::FieldMask* value);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();

  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  ::google::protobuf::FieldMask* _internal_mutable_update_mask();

  public:
  // @@protoc_insertion_point(class_scope:ownmfa.api.UpdateOrgRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::ownmfa::api::Org* org_;
    ::google::protobuf::FieldMask* update_mask_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fownmfa_5forg_2eproto;
};// -------------------------------------------------------------------

class DeleteOrgRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ownmfa.api.DeleteOrgRequest) */ {
 public:
  inline DeleteOrgRequest() : DeleteOrgRequest(nullptr) {}
  ~DeleteOrgRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteOrgRequest(::google::protobuf::internal::ConstantInitialized);

  DeleteOrgRequest(const DeleteOrgRequest& from);
  DeleteOrgRequest(DeleteOrgRequest&& from) noexcept
    : DeleteOrgRequest() {
    *this = ::std::move(from);
  }

  inline DeleteOrgRequest& operator=(const DeleteOrgRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteOrgRequest& operator=(DeleteOrgRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteOrgRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteOrgRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteOrgRequest*>(
               &_DeleteOrgRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DeleteOrgRequest& a, DeleteOrgRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteOrgRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteOrgRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteOrgRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteOrgRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteOrgRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeleteOrgRequest& from) {
    DeleteOrgRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteOrgRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ownmfa.api.DeleteOrgRequest";
  }
  protected:
  explicit DeleteOrgRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:ownmfa.api.DeleteOrgRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 38, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fownmfa_5forg_2eproto;
};// -------------------------------------------------------------------

class ListOrgsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ownmfa.api.ListOrgsRequest) */ {
 public:
  inline ListOrgsRequest() : ListOrgsRequest(nullptr) {}
  ~ListOrgsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ListOrgsRequest(::google::protobuf::internal::ConstantInitialized);

  ListOrgsRequest(const ListOrgsRequest& from);
  ListOrgsRequest(ListOrgsRequest&& from) noexcept
    : ListOrgsRequest() {
    *this = ::std::move(from);
  }

  inline ListOrgsRequest& operator=(const ListOrgsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOrgsRequest& operator=(ListOrgsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListOrgsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListOrgsRequest* internal_default_instance() {
    return reinterpret_cast<const ListOrgsRequest*>(
               &_ListOrgsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ListOrgsRequest& a, ListOrgsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListOrgsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListOrgsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListOrgsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListOrgsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListOrgsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ListOrgsRequest& from) {
    ListOrgsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOrgsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ownmfa.api.ListOrgsRequest";
  }
  protected:
  explicit ListOrgsRequest(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageTokenFieldNumber = 2,
    kPageSizeFieldNumber = 1,
  };
  // string page_token = 2;
  void clear_page_token() ;
  const std::string& page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* ptr);

  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(
      const std::string& value);
  std::string* _internal_mutable_page_token();

  public:
  // int32 page_size = 1 [(.validate.rules) = {
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ownmfa.api.ListOrgsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 45, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::int32_t page_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fownmfa_5forg_2eproto;
};// -------------------------------------------------------------------

class ListOrgsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ownmfa.api.ListOrgsResponse) */ {
 public:
  inline ListOrgsResponse() : ListOrgsResponse(nullptr) {}
  ~ListOrgsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ListOrgsResponse(::google::protobuf::internal::ConstantInitialized);

  ListOrgsResponse(const ListOrgsResponse& from);
  ListOrgsResponse(ListOrgsResponse&& from) noexcept
    : ListOrgsResponse() {
    *this = ::std::move(from);
  }

  inline ListOrgsResponse& operator=(const ListOrgsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOrgsResponse& operator=(ListOrgsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListOrgsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListOrgsResponse* internal_default_instance() {
    return reinterpret_cast<const ListOrgsResponse*>(
               &_ListOrgsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ListOrgsResponse& a, ListOrgsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListOrgsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListOrgsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListOrgsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListOrgsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListOrgsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ListOrgsResponse& from) {
    ListOrgsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOrgsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ownmfa.api.ListOrgsResponse";
  }
  protected:
  explicit ListOrgsResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrgsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
    kTotalSizeFieldNumber = 3,
  };
  // repeated .ownmfa.api.Org orgs = 1;
  int orgs_size() const;
  private:
  int _internal_orgs_size() const;

  public:
  void clear_orgs() ;
  ::ownmfa::api::Org* mutable_orgs(int index);
  ::google::protobuf::RepeatedPtrField< ::ownmfa::api::Org >*
      mutable_orgs();
  private:
  const ::google::protobuf::RepeatedPtrField<::ownmfa::api::Org>& _internal_orgs() const;
  ::google::protobuf::RepeatedPtrField<::ownmfa::api::Org>* _internal_mutable_orgs();
  public:
  const ::ownmfa::api::Org& orgs(int index) const;
  ::ownmfa::api::Org* add_orgs();
  const ::google::protobuf::RepeatedPtrField< ::ownmfa::api::Org >&
      orgs() const;
  // string next_page_token = 2;
  void clear_next_page_token() ;
  const std::string& next_page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_next_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* ptr);

  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(
      const std::string& value);
  std::string* _internal_mutable_next_page_token();

  public:
  // int32 total_size = 3;
  void clear_total_size() ;
  ::int32_t total_size() const;
  void set_total_size(::int32_t value);

  private:
  ::int32_t _internal_total_size() const;
  void _internal_set_total_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ownmfa.api.ListOrgsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 51, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::ownmfa::api::Org > orgs_;
    ::google::protobuf::internal::ArenaStringPtr next_page_token_;
    ::int32_t total_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_api_2fownmfa_5forg_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Org

// string id = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void Org::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Org::id() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.Org.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Org::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ownmfa.api.Org.id)
}
inline std::string* Org::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.Org.id)
  return _s;
}
inline const std::string& Org::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Org::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* Org::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* Org::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.Org.id)
  return _impl_.id_.Release();
}
inline void Org::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.Org.id)
}

// string name = 2 [(.validate.rules) = {
inline void Org::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Org::name() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.Org.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Org::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ownmfa.api.Org.name)
}
inline std::string* Org::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.Org.name)
  return _s;
}
inline const std::string& Org::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Org::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* Org::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* Org::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.Org.name)
  return _impl_.name_.Release();
}
inline void Org::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.Org.name)
}

// .ownmfa.api.Status status = 5 [(.validate.rules) = {
inline void Org::clear_status() {
  _impl_.status_ = 0;
}
inline ::ownmfa::api::Status Org::status() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.Org.status)
  return _internal_status();
}
inline void Org::set_status(::ownmfa::api::Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:ownmfa.api.Org.status)
}
inline ::ownmfa::api::Status Org::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ownmfa::api::Status>(_impl_.status_);
}
inline void Org::_internal_set_status(::ownmfa::api::Status value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// .ownmfa.api.Plan plan = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline void Org::clear_plan() {
  _impl_.plan_ = 0;
}
inline ::ownmfa::api::Plan Org::plan() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.Org.plan)
  return _internal_plan();
}
inline void Org::set_plan(::ownmfa::api::Plan value) {
  _internal_set_plan(value);
  // @@protoc_insertion_point(field_set:ownmfa.api.Org.plan)
}
inline ::ownmfa::api::Plan Org::_internal_plan() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ownmfa::api::Plan>(_impl_.plan_);
}
inline void Org::_internal_set_plan(::ownmfa::api::Plan value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plan_ = value;
}

// .google.protobuf.Timestamp created_at = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline bool Org::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Org::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Org::created_at() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.Org.created_at)
  return _internal_created_at();
}
inline void Org::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ownmfa.api.Org.created_at)
}
inline ::google::protobuf::Timestamp* Org::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Org::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.Org.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Org::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* Org::mutable_created_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.Org.created_at)
  return _msg;
}
inline void Org::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.Org.created_at)
}

// .google.protobuf.Timestamp updated_at = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
inline bool Org::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Org::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Org::updated_at() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.Org.updated_at)
  return _internal_updated_at();
}
inline void Org::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ownmfa.api.Org.updated_at)
}
inline ::google::protobuf::Timestamp* Org::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Org::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.Org.updated_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Org::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* Org::mutable_updated_at() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.Org.updated_at)
  return _msg;
}
inline void Org::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.Org.updated_at)
}

// -------------------------------------------------------------------

// CreateOrgRequest

// .ownmfa.api.Org org = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline bool CreateOrgRequest::has_org() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.org_ != nullptr);
  return value;
}
inline void CreateOrgRequest::clear_org() {
  if (_impl_.org_ != nullptr) _impl_.org_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ownmfa::api::Org& CreateOrgRequest::_internal_org() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ownmfa::api::Org* p = _impl_.org_;
  return p != nullptr ? *p : reinterpret_cast<const ::ownmfa::api::Org&>(::ownmfa::api::_Org_default_instance_);
}
inline const ::ownmfa::api::Org& CreateOrgRequest::org() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.CreateOrgRequest.org)
  return _internal_org();
}
inline void CreateOrgRequest::unsafe_arena_set_allocated_org(::ownmfa::api::Org* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.org_);
  }
  _impl_.org_ = reinterpret_cast<::ownmfa::api::Org*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ownmfa.api.CreateOrgRequest.org)
}
inline ::ownmfa::api::Org* CreateOrgRequest::release_org() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ownmfa::api::Org* released = _impl_.org_;
  _impl_.org_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ownmfa::api::Org* CreateOrgRequest::unsafe_arena_release_org() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.CreateOrgRequest.org)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ownmfa::api::Org* temp = _impl_.org_;
  _impl_.org_ = nullptr;
  return temp;
}
inline ::ownmfa::api::Org* CreateOrgRequest::_internal_mutable_org() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.org_ == nullptr) {
    auto* p = CreateMaybeMessage<::ownmfa::api::Org>(GetArenaForAllocation());
    _impl_.org_ = reinterpret_cast<::ownmfa::api::Org*>(p);
  }
  return _impl_.org_;
}
inline ::ownmfa::api::Org* CreateOrgRequest::mutable_org() {
  ::ownmfa::api::Org* _msg = _internal_mutable_org();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.CreateOrgRequest.org)
  return _msg;
}
inline void CreateOrgRequest::set_allocated_org(::ownmfa::api::Org* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ownmfa::api::Org*>(_impl_.org_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ownmfa::api::Org*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.org_ = reinterpret_cast<::ownmfa::api::Org*>(value);
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.CreateOrgRequest.org)
}

// -------------------------------------------------------------------

// GetOrgRequest

// string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline void GetOrgRequest::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& GetOrgRequest::id() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.GetOrgRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrgRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ownmfa.api.GetOrgRequest.id)
}
inline std::string* GetOrgRequest::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.GetOrgRequest.id)
  return _s;
}
inline const std::string& GetOrgRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void GetOrgRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* GetOrgRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* GetOrgRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.GetOrgRequest.id)
  return _impl_.id_.Release();
}
inline void GetOrgRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.GetOrgRequest.id)
}

// -------------------------------------------------------------------

// UpdateOrgRequest

// .ownmfa.api.Org org = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline bool UpdateOrgRequest::has_org() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.org_ != nullptr);
  return value;
}
inline void UpdateOrgRequest::clear_org() {
  if (_impl_.org_ != nullptr) _impl_.org_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ownmfa::api::Org& UpdateOrgRequest::_internal_org() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ownmfa::api::Org* p = _impl_.org_;
  return p != nullptr ? *p : reinterpret_cast<const ::ownmfa::api::Org&>(::ownmfa::api::_Org_default_instance_);
}
inline const ::ownmfa::api::Org& UpdateOrgRequest::org() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.UpdateOrgRequest.org)
  return _internal_org();
}
inline void UpdateOrgRequest::unsafe_arena_set_allocated_org(::ownmfa::api::Org* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.org_);
  }
  _impl_.org_ = reinterpret_cast<::ownmfa::api::Org*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ownmfa.api.UpdateOrgRequest.org)
}
inline ::ownmfa::api::Org* UpdateOrgRequest::release_org() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ownmfa::api::Org* released = _impl_.org_;
  _impl_.org_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ownmfa::api::Org* UpdateOrgRequest::unsafe_arena_release_org() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.UpdateOrgRequest.org)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ownmfa::api::Org* temp = _impl_.org_;
  _impl_.org_ = nullptr;
  return temp;
}
inline ::ownmfa::api::Org* UpdateOrgRequest::_internal_mutable_org() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.org_ == nullptr) {
    auto* p = CreateMaybeMessage<::ownmfa::api::Org>(GetArenaForAllocation());
    _impl_.org_ = reinterpret_cast<::ownmfa::api::Org*>(p);
  }
  return _impl_.org_;
}
inline ::ownmfa::api::Org* UpdateOrgRequest::mutable_org() {
  ::ownmfa::api::Org* _msg = _internal_mutable_org();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.UpdateOrgRequest.org)
  return _msg;
}
inline void UpdateOrgRequest::set_allocated_org(::ownmfa::api::Org* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ownmfa::api::Org*>(_impl_.org_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::ownmfa::api::Org*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.org_ = reinterpret_cast<::ownmfa::api::Org*>(value);
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.UpdateOrgRequest.org)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateOrgRequest::has_update_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_mask_ != nullptr);
  return value;
}
inline const ::google::protobuf::FieldMask& UpdateOrgRequest::_internal_update_mask() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::FieldMask* p = _impl_.update_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::FieldMask&>(::google::protobuf::_FieldMask_default_instance_);
}
inline const ::google::protobuf::FieldMask& UpdateOrgRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.UpdateOrgRequest.update_mask)
  return _internal_update_mask();
}
inline void UpdateOrgRequest::unsafe_arena_set_allocated_update_mask(::google::protobuf::FieldMask* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_mask_);
  }
  _impl_.update_mask_ = reinterpret_cast<::google::protobuf::FieldMask*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ownmfa.api.UpdateOrgRequest.update_mask)
}
inline ::google::protobuf::FieldMask* UpdateOrgRequest::release_update_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::FieldMask* released = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::FieldMask* UpdateOrgRequest::unsafe_arena_release_update_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.UpdateOrgRequest.update_mask)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateOrgRequest::_internal_mutable_update_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.update_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaForAllocation());
    _impl_.update_mask_ = reinterpret_cast<::google::protobuf::FieldMask*>(p);
  }
  return _impl_.update_mask_;
}
inline ::google::protobuf::FieldMask* UpdateOrgRequest::mutable_update_mask() {
  ::google::protobuf::FieldMask* _msg = _internal_mutable_update_mask();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.UpdateOrgRequest.update_mask)
  return _msg;
}
inline void UpdateOrgRequest::set_allocated_update_mask(::google::protobuf::FieldMask* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_mask_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.update_mask_ = reinterpret_cast<::google::protobuf::FieldMask*>(value);
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.UpdateOrgRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteOrgRequest

// string id = 1 [(.google.api.field_behavior) = REQUIRED, (.validate.rules) = {
inline void DeleteOrgRequest::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeleteOrgRequest::id() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.DeleteOrgRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteOrgRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ownmfa.api.DeleteOrgRequest.id)
}
inline std::string* DeleteOrgRequest::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.DeleteOrgRequest.id)
  return _s;
}
inline const std::string& DeleteOrgRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void DeleteOrgRequest::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* DeleteOrgRequest::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* DeleteOrgRequest::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.DeleteOrgRequest.id)
  return _impl_.id_.Release();
}
inline void DeleteOrgRequest::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.DeleteOrgRequest.id)
}

// -------------------------------------------------------------------

// ListOrgsRequest

// int32 page_size = 1 [(.validate.rules) = {
inline void ListOrgsRequest::clear_page_size() {
  _impl_.page_size_ = 0;
}
inline ::int32_t ListOrgsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.ListOrgsRequest.page_size)
  return _internal_page_size();
}
inline void ListOrgsRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:ownmfa.api.ListOrgsRequest.page_size)
}
inline ::int32_t ListOrgsRequest::_internal_page_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_size_;
}
inline void ListOrgsRequest::_internal_set_page_size(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_size_ = value;
}

// string page_token = 2;
inline void ListOrgsRequest::clear_page_token() {
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& ListOrgsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.ListOrgsRequest.page_token)
  return _internal_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListOrgsRequest::set_page_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ownmfa.api.ListOrgsRequest.page_token)
}
inline std::string* ListOrgsRequest::mutable_page_token() {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.ListOrgsRequest.page_token)
  return _s;
}
inline const std::string& ListOrgsRequest::_internal_page_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_token_.Get();
}
inline void ListOrgsRequest::_internal_set_page_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListOrgsRequest::_internal_mutable_page_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.page_token_.Mutable( GetArenaForAllocation());
}
inline std::string* ListOrgsRequest::release_page_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.ListOrgsRequest.page_token)
  return _impl_.page_token_.Release();
}
inline void ListOrgsRequest::set_allocated_page_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.page_token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.page_token_.IsDefault()) {
          _impl_.page_token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.ListOrgsRequest.page_token)
}

// -------------------------------------------------------------------

// ListOrgsResponse

// repeated .ownmfa.api.Org orgs = 1;
inline int ListOrgsResponse::_internal_orgs_size() const {
  return _internal_orgs().size();
}
inline int ListOrgsResponse::orgs_size() const {
  return _internal_orgs_size();
}
inline void ListOrgsResponse::clear_orgs() {
  _internal_mutable_orgs()->Clear();
}
inline ::ownmfa::api::Org* ListOrgsResponse::mutable_orgs(int index) {
  // @@protoc_insertion_point(field_mutable:ownmfa.api.ListOrgsResponse.orgs)
  return _internal_mutable_orgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ownmfa::api::Org >*
ListOrgsResponse::mutable_orgs() {
  // @@protoc_insertion_point(field_mutable_list:ownmfa.api.ListOrgsResponse.orgs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_orgs();
}
inline const ::ownmfa::api::Org& ListOrgsResponse::orgs(int index) const {
  // @@protoc_insertion_point(field_get:ownmfa.api.ListOrgsResponse.orgs)
    return _internal_orgs().Get(index);
}
inline ::ownmfa::api::Org* ListOrgsResponse::add_orgs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ownmfa::api::Org* _add = _internal_mutable_orgs()->Add();
  // @@protoc_insertion_point(field_add:ownmfa.api.ListOrgsResponse.orgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::ownmfa::api::Org >&
ListOrgsResponse::orgs() const {
  // @@protoc_insertion_point(field_list:ownmfa.api.ListOrgsResponse.orgs)
  return _internal_orgs();
}
inline const ::google::protobuf::RepeatedPtrField<::ownmfa::api::Org>&
ListOrgsResponse::_internal_orgs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.orgs_;
}
inline ::google::protobuf::RepeatedPtrField<::ownmfa::api::Org>*
ListOrgsResponse::_internal_mutable_orgs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.orgs_;
}

// string next_page_token = 2;
inline void ListOrgsResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
}
inline const std::string& ListOrgsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.ListOrgsResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListOrgsResponse::set_next_page_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.next_page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ownmfa.api.ListOrgsResponse.next_page_token)
}
inline std::string* ListOrgsResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:ownmfa.api.ListOrgsResponse.next_page_token)
  return _s;
}
inline const std::string& ListOrgsResponse::_internal_next_page_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.next_page_token_.Get();
}
inline void ListOrgsResponse::_internal_set_next_page_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* ListOrgsResponse::_internal_mutable_next_page_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.next_page_token_.Mutable( GetArenaForAllocation());
}
inline std::string* ListOrgsResponse::release_next_page_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ownmfa.api.ListOrgsResponse.next_page_token)
  return _impl_.next_page_token_.Release();
}
inline void ListOrgsResponse::set_allocated_next_page_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.next_page_token_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.next_page_token_.IsDefault()) {
          _impl_.next_page_token_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ownmfa.api.ListOrgsResponse.next_page_token)
}

// int32 total_size = 3;
inline void ListOrgsResponse::clear_total_size() {
  _impl_.total_size_ = 0;
}
inline ::int32_t ListOrgsResponse::total_size() const {
  // @@protoc_insertion_point(field_get:ownmfa.api.ListOrgsResponse.total_size)
  return _internal_total_size();
}
inline void ListOrgsResponse::set_total_size(::int32_t value) {
  _internal_set_total_size(value);
  // @@protoc_insertion_point(field_set:ownmfa.api.ListOrgsResponse.total_size)
}
inline ::int32_t ListOrgsResponse::_internal_total_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_size_;
}
inline void ListOrgsResponse::_internal_set_total_size(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_size_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace ownmfa


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ownmfa::api::Plan> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ownmfa::api::Plan>() {
  return ::ownmfa::api::Plan_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_api_2fownmfa_5forg_2eproto_2epb_2eh
