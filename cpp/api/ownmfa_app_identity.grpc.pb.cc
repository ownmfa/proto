// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: api/ownmfa_app_identity.proto

#include "api/ownmfa_app_identity.pb.h"
#include "api/ownmfa_app_identity.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
namespace ownmfa {
namespace api {

static const char* AppIdentityService_method_names[] = {
  "/ownmfa.api.AppIdentityService/CreateApp",
  "/ownmfa.api.AppIdentityService/CreateIdentity",
  "/ownmfa.api.AppIdentityService/ActivateIdentity",
  "/ownmfa.api.AppIdentityService/ChallengeIdentity",
  "/ownmfa.api.AppIdentityService/VerifyIdentity",
  "/ownmfa.api.AppIdentityService/GetApp",
  "/ownmfa.api.AppIdentityService/GetIdentity",
  "/ownmfa.api.AppIdentityService/UpdateApp",
  "/ownmfa.api.AppIdentityService/DeleteApp",
  "/ownmfa.api.AppIdentityService/DeleteIdentity",
  "/ownmfa.api.AppIdentityService/ListApps",
  "/ownmfa.api.AppIdentityService/ListIdentities",
};

std::unique_ptr< AppIdentityService::Stub> AppIdentityService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< AppIdentityService::Stub> stub(new AppIdentityService::Stub(channel, options));
  return stub;
}

AppIdentityService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_CreateApp_(AppIdentityService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateIdentity_(AppIdentityService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ActivateIdentity_(AppIdentityService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ChallengeIdentity_(AppIdentityService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_VerifyIdentity_(AppIdentityService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetApp_(AppIdentityService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIdentity_(AppIdentityService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateApp_(AppIdentityService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteApp_(AppIdentityService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteIdentity_(AppIdentityService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListApps_(AppIdentityService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListIdentities_(AppIdentityService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status AppIdentityService::Stub::CreateApp(::grpc::ClientContext* context, const ::ownmfa::api::CreateAppRequest& request, ::ownmfa::api::App* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::CreateAppRequest, ::ownmfa::api::App, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateApp_, context, request, response);
}

void AppIdentityService::Stub::async::CreateApp(::grpc::ClientContext* context, const ::ownmfa::api::CreateAppRequest* request, ::ownmfa::api::App* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::CreateAppRequest, ::ownmfa::api::App, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateApp_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::CreateApp(::grpc::ClientContext* context, const ::ownmfa::api::CreateAppRequest* request, ::ownmfa::api::App* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateApp_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::App>* AppIdentityService::Stub::PrepareAsyncCreateAppRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateAppRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ownmfa::api::App, ::ownmfa::api::CreateAppRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateApp_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::App>* AppIdentityService::Stub::AsyncCreateAppRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateAppRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateAppRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::CreateIdentity(::grpc::ClientContext* context, const ::ownmfa::api::CreateIdentityRequest& request, ::ownmfa::api::CreateIdentityResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::CreateIdentityRequest, ::ownmfa::api::CreateIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateIdentity_, context, request, response);
}

void AppIdentityService::Stub::async::CreateIdentity(::grpc::ClientContext* context, const ::ownmfa::api::CreateIdentityRequest* request, ::ownmfa::api::CreateIdentityResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::CreateIdentityRequest, ::ownmfa::api::CreateIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateIdentity_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::CreateIdentity(::grpc::ClientContext* context, const ::ownmfa::api::CreateIdentityRequest* request, ::ownmfa::api::CreateIdentityResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::CreateIdentityResponse>* AppIdentityService::Stub::PrepareAsyncCreateIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ownmfa::api::CreateIdentityResponse, ::ownmfa::api::CreateIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::CreateIdentityResponse>* AppIdentityService::Stub::AsyncCreateIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::ActivateIdentity(::grpc::ClientContext* context, const ::ownmfa::api::ActivateIdentityRequest& request, ::ownmfa::api::Identity* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::ActivateIdentityRequest, ::ownmfa::api::Identity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ActivateIdentity_, context, request, response);
}

void AppIdentityService::Stub::async::ActivateIdentity(::grpc::ClientContext* context, const ::ownmfa::api::ActivateIdentityRequest* request, ::ownmfa::api::Identity* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::ActivateIdentityRequest, ::ownmfa::api::Identity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ActivateIdentity_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::ActivateIdentity(::grpc::ClientContext* context, const ::ownmfa::api::ActivateIdentityRequest* request, ::ownmfa::api::Identity* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ActivateIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::Identity>* AppIdentityService::Stub::PrepareAsyncActivateIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::ActivateIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ownmfa::api::Identity, ::ownmfa::api::ActivateIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ActivateIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::Identity>* AppIdentityService::Stub::AsyncActivateIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::ActivateIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncActivateIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::ChallengeIdentity(::grpc::ClientContext* context, const ::ownmfa::api::ChallengeIdentityRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::ChallengeIdentityRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ChallengeIdentity_, context, request, response);
}

void AppIdentityService::Stub::async::ChallengeIdentity(::grpc::ClientContext* context, const ::ownmfa::api::ChallengeIdentityRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::ChallengeIdentityRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ChallengeIdentity_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::ChallengeIdentity(::grpc::ClientContext* context, const ::ownmfa::api::ChallengeIdentityRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ChallengeIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AppIdentityService::Stub::PrepareAsyncChallengeIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::ChallengeIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::ownmfa::api::ChallengeIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ChallengeIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AppIdentityService::Stub::AsyncChallengeIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::ChallengeIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncChallengeIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::VerifyIdentity(::grpc::ClientContext* context, const ::ownmfa::api::VerifyIdentityRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::VerifyIdentityRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_VerifyIdentity_, context, request, response);
}

void AppIdentityService::Stub::async::VerifyIdentity(::grpc::ClientContext* context, const ::ownmfa::api::VerifyIdentityRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::VerifyIdentityRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_VerifyIdentity_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::VerifyIdentity(::grpc::ClientContext* context, const ::ownmfa::api::VerifyIdentityRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_VerifyIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AppIdentityService::Stub::PrepareAsyncVerifyIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::VerifyIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::ownmfa::api::VerifyIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_VerifyIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AppIdentityService::Stub::AsyncVerifyIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::VerifyIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncVerifyIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::GetApp(::grpc::ClientContext* context, const ::ownmfa::api::GetAppRequest& request, ::ownmfa::api::App* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::GetAppRequest, ::ownmfa::api::App, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetApp_, context, request, response);
}

void AppIdentityService::Stub::async::GetApp(::grpc::ClientContext* context, const ::ownmfa::api::GetAppRequest* request, ::ownmfa::api::App* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::GetAppRequest, ::ownmfa::api::App, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetApp_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::GetApp(::grpc::ClientContext* context, const ::ownmfa::api::GetAppRequest* request, ::ownmfa::api::App* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetApp_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::App>* AppIdentityService::Stub::PrepareAsyncGetAppRaw(::grpc::ClientContext* context, const ::ownmfa::api::GetAppRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ownmfa::api::App, ::ownmfa::api::GetAppRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetApp_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::App>* AppIdentityService::Stub::AsyncGetAppRaw(::grpc::ClientContext* context, const ::ownmfa::api::GetAppRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetAppRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::GetIdentity(::grpc::ClientContext* context, const ::ownmfa::api::GetIdentityRequest& request, ::ownmfa::api::Identity* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::GetIdentityRequest, ::ownmfa::api::Identity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetIdentity_, context, request, response);
}

void AppIdentityService::Stub::async::GetIdentity(::grpc::ClientContext* context, const ::ownmfa::api::GetIdentityRequest* request, ::ownmfa::api::Identity* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::GetIdentityRequest, ::ownmfa::api::Identity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentity_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::GetIdentity(::grpc::ClientContext* context, const ::ownmfa::api::GetIdentityRequest* request, ::ownmfa::api::Identity* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::Identity>* AppIdentityService::Stub::PrepareAsyncGetIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ownmfa::api::Identity, ::ownmfa::api::GetIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::Identity>* AppIdentityService::Stub::AsyncGetIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::GetIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::UpdateApp(::grpc::ClientContext* context, const ::ownmfa::api::UpdateAppRequest& request, ::ownmfa::api::App* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::UpdateAppRequest, ::ownmfa::api::App, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateApp_, context, request, response);
}

void AppIdentityService::Stub::async::UpdateApp(::grpc::ClientContext* context, const ::ownmfa::api::UpdateAppRequest* request, ::ownmfa::api::App* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::UpdateAppRequest, ::ownmfa::api::App, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateApp_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::UpdateApp(::grpc::ClientContext* context, const ::ownmfa::api::UpdateAppRequest* request, ::ownmfa::api::App* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateApp_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::App>* AppIdentityService::Stub::PrepareAsyncUpdateAppRaw(::grpc::ClientContext* context, const ::ownmfa::api::UpdateAppRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ownmfa::api::App, ::ownmfa::api::UpdateAppRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateApp_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::App>* AppIdentityService::Stub::AsyncUpdateAppRaw(::grpc::ClientContext* context, const ::ownmfa::api::UpdateAppRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateAppRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::DeleteApp(::grpc::ClientContext* context, const ::ownmfa::api::DeleteAppRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::DeleteAppRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteApp_, context, request, response);
}

void AppIdentityService::Stub::async::DeleteApp(::grpc::ClientContext* context, const ::ownmfa::api::DeleteAppRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::DeleteAppRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteApp_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::DeleteApp(::grpc::ClientContext* context, const ::ownmfa::api::DeleteAppRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteApp_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AppIdentityService::Stub::PrepareAsyncDeleteAppRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteAppRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::ownmfa::api::DeleteAppRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteApp_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AppIdentityService::Stub::AsyncDeleteAppRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteAppRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteAppRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::DeleteIdentity(::grpc::ClientContext* context, const ::ownmfa::api::DeleteIdentityRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::DeleteIdentityRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteIdentity_, context, request, response);
}

void AppIdentityService::Stub::async::DeleteIdentity(::grpc::ClientContext* context, const ::ownmfa::api::DeleteIdentityRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::DeleteIdentityRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIdentity_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::DeleteIdentity(::grpc::ClientContext* context, const ::ownmfa::api::DeleteIdentityRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteIdentity_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AppIdentityService::Stub::PrepareAsyncDeleteIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::ownmfa::api::DeleteIdentityRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteIdentity_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AppIdentityService::Stub::AsyncDeleteIdentityRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteIdentityRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteIdentityRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::ListApps(::grpc::ClientContext* context, const ::ownmfa::api::ListAppsRequest& request, ::ownmfa::api::ListAppsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::ListAppsRequest, ::ownmfa::api::ListAppsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListApps_, context, request, response);
}

void AppIdentityService::Stub::async::ListApps(::grpc::ClientContext* context, const ::ownmfa::api::ListAppsRequest* request, ::ownmfa::api::ListAppsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::ListAppsRequest, ::ownmfa::api::ListAppsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListApps_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::ListApps(::grpc::ClientContext* context, const ::ownmfa::api::ListAppsRequest* request, ::ownmfa::api::ListAppsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListApps_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListAppsResponse>* AppIdentityService::Stub::PrepareAsyncListAppsRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListAppsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ownmfa::api::ListAppsResponse, ::ownmfa::api::ListAppsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListApps_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListAppsResponse>* AppIdentityService::Stub::AsyncListAppsRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListAppsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListAppsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status AppIdentityService::Stub::ListIdentities(::grpc::ClientContext* context, const ::ownmfa::api::ListIdentitiesRequest& request, ::ownmfa::api::ListIdentitiesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ownmfa::api::ListIdentitiesRequest, ::ownmfa::api::ListIdentitiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListIdentities_, context, request, response);
}

void AppIdentityService::Stub::async::ListIdentities(::grpc::ClientContext* context, const ::ownmfa::api::ListIdentitiesRequest* request, ::ownmfa::api::ListIdentitiesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ownmfa::api::ListIdentitiesRequest, ::ownmfa::api::ListIdentitiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListIdentities_, context, request, response, std::move(f));
}

void AppIdentityService::Stub::async::ListIdentities(::grpc::ClientContext* context, const ::ownmfa::api::ListIdentitiesRequest* request, ::ownmfa::api::ListIdentitiesResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListIdentities_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListIdentitiesResponse>* AppIdentityService::Stub::PrepareAsyncListIdentitiesRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListIdentitiesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ownmfa::api::ListIdentitiesResponse, ::ownmfa::api::ListIdentitiesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListIdentities_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListIdentitiesResponse>* AppIdentityService::Stub::AsyncListIdentitiesRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListIdentitiesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListIdentitiesRaw(context, request, cq);
  result->StartCall();
  return result;
}

AppIdentityService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::CreateAppRequest, ::ownmfa::api::App, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::CreateAppRequest* req,
             ::ownmfa::api::App* resp) {
               return service->CreateApp(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::CreateIdentityRequest, ::ownmfa::api::CreateIdentityResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::CreateIdentityRequest* req,
             ::ownmfa::api::CreateIdentityResponse* resp) {
               return service->CreateIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::ActivateIdentityRequest, ::ownmfa::api::Identity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::ActivateIdentityRequest* req,
             ::ownmfa::api::Identity* resp) {
               return service->ActivateIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::ChallengeIdentityRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::ChallengeIdentityRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->ChallengeIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::VerifyIdentityRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::VerifyIdentityRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->VerifyIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::GetAppRequest, ::ownmfa::api::App, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::GetAppRequest* req,
             ::ownmfa::api::App* resp) {
               return service->GetApp(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::GetIdentityRequest, ::ownmfa::api::Identity, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::GetIdentityRequest* req,
             ::ownmfa::api::Identity* resp) {
               return service->GetIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::UpdateAppRequest, ::ownmfa::api::App, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::UpdateAppRequest* req,
             ::ownmfa::api::App* resp) {
               return service->UpdateApp(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::DeleteAppRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::DeleteAppRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteApp(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::DeleteIdentityRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::DeleteIdentityRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteIdentity(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::ListAppsRequest, ::ownmfa::api::ListAppsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::ListAppsRequest* req,
             ::ownmfa::api::ListAppsResponse* resp) {
               return service->ListApps(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      AppIdentityService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< AppIdentityService::Service, ::ownmfa::api::ListIdentitiesRequest, ::ownmfa::api::ListIdentitiesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](AppIdentityService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ownmfa::api::ListIdentitiesRequest* req,
             ::ownmfa::api::ListIdentitiesResponse* resp) {
               return service->ListIdentities(ctx, req, resp);
             }, this)));
}

AppIdentityService::Service::~Service() {
}

::grpc::Status AppIdentityService::Service::CreateApp(::grpc::ServerContext* context, const ::ownmfa::api::CreateAppRequest* request, ::ownmfa::api::App* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::CreateIdentity(::grpc::ServerContext* context, const ::ownmfa::api::CreateIdentityRequest* request, ::ownmfa::api::CreateIdentityResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::ActivateIdentity(::grpc::ServerContext* context, const ::ownmfa::api::ActivateIdentityRequest* request, ::ownmfa::api::Identity* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::ChallengeIdentity(::grpc::ServerContext* context, const ::ownmfa::api::ChallengeIdentityRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::VerifyIdentity(::grpc::ServerContext* context, const ::ownmfa::api::VerifyIdentityRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::GetApp(::grpc::ServerContext* context, const ::ownmfa::api::GetAppRequest* request, ::ownmfa::api::App* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::GetIdentity(::grpc::ServerContext* context, const ::ownmfa::api::GetIdentityRequest* request, ::ownmfa::api::Identity* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::UpdateApp(::grpc::ServerContext* context, const ::ownmfa::api::UpdateAppRequest* request, ::ownmfa::api::App* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::DeleteApp(::grpc::ServerContext* context, const ::ownmfa::api::DeleteAppRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::DeleteIdentity(::grpc::ServerContext* context, const ::ownmfa::api::DeleteIdentityRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::ListApps(::grpc::ServerContext* context, const ::ownmfa::api::ListAppsRequest* request, ::ownmfa::api::ListAppsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status AppIdentityService::Service::ListIdentities(::grpc::ServerContext* context, const ::ownmfa::api::ListIdentitiesRequest* request, ::ownmfa::api::ListIdentitiesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace ownmfa
}  // namespace api

