// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: api/ownmfa_session.proto
#ifndef GRPC_api_2fownmfa_5fsession_2eproto__INCLUDED
#define GRPC_api_2fownmfa_5fsession_2eproto__INCLUDED

#include "api/ownmfa_session.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace ownmfa {
namespace api {

// SessionService contains functions to create sessions and keys.
class SessionService final {
 public:
  static constexpr char const* service_full_name() {
    return "ownmfa.api.SessionService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Log in a user. Login tokens are time-limited and accompanied by an expiration.
    virtual ::grpc::Status Login(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::ownmfa::api::LoginResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::LoginResponse>> AsyncLogin(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::LoginResponse>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::LoginResponse>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::LoginResponse>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    // Create an API key. API keys are persistent and do not expire until revoked.
    virtual ::grpc::Status CreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::ownmfa::api::CreateKeyResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::CreateKeyResponse>> AsyncCreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::CreateKeyResponse>>(AsyncCreateKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::CreateKeyResponse>> PrepareAsyncCreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::CreateKeyResponse>>(PrepareAsyncCreateKeyRaw(context, request, cq));
    }
    // Delete an API key by ID. API keys are persistent and do not expire until revoked.
    virtual ::grpc::Status DeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteKeyRaw(context, request, cq));
    }
    // List all API keys. API keys are persistent and do not expire until revoked.
    virtual ::grpc::Status ListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::ownmfa::api::ListKeysResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListKeysResponse>> AsyncListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListKeysResponse>>(AsyncListKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListKeysResponse>> PrepareAsyncListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListKeysResponse>>(PrepareAsyncListKeysRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Log in a user. Login tokens are time-limited and accompanied by an expiration.
      virtual void Login(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest* request, ::ownmfa::api::LoginResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest* request, ::ownmfa::api::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Create an API key. API keys are persistent and do not expire until revoked.
      virtual void CreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest* request, ::ownmfa::api::CreateKeyResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest* request, ::ownmfa::api::CreateKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete an API key by ID. API keys are persistent and do not expire until revoked.
      virtual void DeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List all API keys. API keys are persistent and do not expire until revoked.
      virtual void ListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest* request, ::ownmfa::api::ListKeysResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest* request, ::ownmfa::api::ListKeysResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::LoginResponse>* AsyncLoginRaw(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::LoginResponse>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::CreateKeyResponse>* AsyncCreateKeyRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::CreateKeyResponse>* PrepareAsyncCreateKeyRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteKeyRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteKeyRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListKeysResponse>* AsyncListKeysRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ownmfa::api::ListKeysResponse>* PrepareAsyncListKeysRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Login(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::ownmfa::api::LoginResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::LoginResponse>> AsyncLogin(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::LoginResponse>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::LoginResponse>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::LoginResponse>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    ::grpc::Status CreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::ownmfa::api::CreateKeyResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::CreateKeyResponse>> AsyncCreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::CreateKeyResponse>>(AsyncCreateKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::CreateKeyResponse>> PrepareAsyncCreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::CreateKeyResponse>>(PrepareAsyncCreateKeyRaw(context, request, cq));
    }
    ::grpc::Status DeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteKeyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteKeyRaw(context, request, cq));
    }
    ::grpc::Status ListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::ownmfa::api::ListKeysResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListKeysResponse>> AsyncListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListKeysResponse>>(AsyncListKeysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListKeysResponse>> PrepareAsyncListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListKeysResponse>>(PrepareAsyncListKeysRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Login(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest* request, ::ownmfa::api::LoginResponse* response, std::function<void(::grpc::Status)>) override;
      void Login(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest* request, ::ownmfa::api::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest* request, ::ownmfa::api::CreateKeyResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateKey(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest* request, ::ownmfa::api::CreateKeyResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteKey(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest* request, ::ownmfa::api::ListKeysResponse* response, std::function<void(::grpc::Status)>) override;
      void ListKeys(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest* request, ::ownmfa::api::ListKeysResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::LoginResponse>* AsyncLoginRaw(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::LoginResponse>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::ownmfa::api::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::CreateKeyResponse>* AsyncCreateKeyRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::CreateKeyResponse>* PrepareAsyncCreateKeyRaw(::grpc::ClientContext* context, const ::ownmfa::api::CreateKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteKeyRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteKeyRaw(::grpc::ClientContext* context, const ::ownmfa::api::DeleteKeyRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListKeysResponse>* AsyncListKeysRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ownmfa::api::ListKeysResponse>* PrepareAsyncListKeysRaw(::grpc::ClientContext* context, const ::ownmfa::api::ListKeysRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Login_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateKey_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteKey_;
    const ::grpc::internal::RpcMethod rpcmethod_ListKeys_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Log in a user. Login tokens are time-limited and accompanied by an expiration.
    virtual ::grpc::Status Login(::grpc::ServerContext* context, const ::ownmfa::api::LoginRequest* request, ::ownmfa::api::LoginResponse* response);
    // Create an API key. API keys are persistent and do not expire until revoked.
    virtual ::grpc::Status CreateKey(::grpc::ServerContext* context, const ::ownmfa::api::CreateKeyRequest* request, ::ownmfa::api::CreateKeyResponse* response);
    // Delete an API key by ID. API keys are persistent and do not expire until revoked.
    virtual ::grpc::Status DeleteKey(::grpc::ServerContext* context, const ::ownmfa::api::DeleteKeyRequest* request, ::google::protobuf::Empty* response);
    // List all API keys. API keys are persistent and do not expire until revoked.
    virtual ::grpc::Status ListKeys(::grpc::ServerContext* context, const ::ownmfa::api::ListKeysRequest* request, ::ownmfa::api::ListKeysResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Login() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::ownmfa::api::LoginRequest* /*request*/, ::ownmfa::api::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::ownmfa::api::LoginRequest* request, ::grpc::ServerAsyncResponseWriter< ::ownmfa::api::LoginResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateKey() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateKeyRequest* /*request*/, ::ownmfa::api::CreateKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateKey(::grpc::ServerContext* context, ::ownmfa::api::CreateKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::ownmfa::api::CreateKeyResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteKey() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteKey(::grpc::ServerContext* context, ::ownmfa::api::DeleteKeyRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListKeys() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListKeys(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListKeysRequest* /*request*/, ::ownmfa::api::ListKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListKeys(::grpc::ServerContext* context, ::ownmfa::api::ListKeysRequest* request, ::grpc::ServerAsyncResponseWriter< ::ownmfa::api::ListKeysResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Login<WithAsyncMethod_CreateKey<WithAsyncMethod_DeleteKey<WithAsyncMethod_ListKeys<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Login() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::LoginRequest, ::ownmfa::api::LoginResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ownmfa::api::LoginRequest* request, ::ownmfa::api::LoginResponse* response) { return this->Login(context, request, response); }));}
    void SetMessageAllocatorFor_Login(
        ::grpc::MessageAllocator< ::ownmfa::api::LoginRequest, ::ownmfa::api::LoginResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::LoginRequest, ::ownmfa::api::LoginResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::ownmfa::api::LoginRequest* /*request*/, ::ownmfa::api::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::ownmfa::api::LoginRequest* /*request*/, ::ownmfa::api::LoginResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateKey() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::CreateKeyRequest, ::ownmfa::api::CreateKeyResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ownmfa::api::CreateKeyRequest* request, ::ownmfa::api::CreateKeyResponse* response) { return this->CreateKey(context, request, response); }));}
    void SetMessageAllocatorFor_CreateKey(
        ::grpc::MessageAllocator< ::ownmfa::api::CreateKeyRequest, ::ownmfa::api::CreateKeyResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::CreateKeyRequest, ::ownmfa::api::CreateKeyResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateKeyRequest* /*request*/, ::ownmfa::api::CreateKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateKey(
      ::grpc::CallbackServerContext* /*context*/, const ::ownmfa::api::CreateKeyRequest* /*request*/, ::ownmfa::api::CreateKeyResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteKey() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::DeleteKeyRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ownmfa::api::DeleteKeyRequest* request, ::google::protobuf::Empty* response) { return this->DeleteKey(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteKey(
        ::grpc::MessageAllocator< ::ownmfa::api::DeleteKeyRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::DeleteKeyRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteKey(
      ::grpc::CallbackServerContext* /*context*/, const ::ownmfa::api::DeleteKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListKeys() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::ListKeysRequest, ::ownmfa::api::ListKeysResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ownmfa::api::ListKeysRequest* request, ::ownmfa::api::ListKeysResponse* response) { return this->ListKeys(context, request, response); }));}
    void SetMessageAllocatorFor_ListKeys(
        ::grpc::MessageAllocator< ::ownmfa::api::ListKeysRequest, ::ownmfa::api::ListKeysResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ownmfa::api::ListKeysRequest, ::ownmfa::api::ListKeysResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListKeys(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListKeysRequest* /*request*/, ::ownmfa::api::ListKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::ownmfa::api::ListKeysRequest* /*request*/, ::ownmfa::api::ListKeysResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Login<WithCallbackMethod_CreateKey<WithCallbackMethod_DeleteKey<WithCallbackMethod_ListKeys<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Login() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::ownmfa::api::LoginRequest* /*request*/, ::ownmfa::api::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateKey() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateKeyRequest* /*request*/, ::ownmfa::api::CreateKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteKey() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListKeys() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListKeys(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListKeysRequest* /*request*/, ::ownmfa::api::ListKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Login() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::ownmfa::api::LoginRequest* /*request*/, ::ownmfa::api::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateKey() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreateKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateKeyRequest* /*request*/, ::ownmfa::api::CreateKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteKey() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteKey(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListKeys() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListKeys(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListKeysRequest* /*request*/, ::ownmfa::api::ListKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListKeys(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Login() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Login(context, request, response); }));
    }
    ~WithRawCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::ownmfa::api::LoginRequest* /*request*/, ::ownmfa::api::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateKey() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateKey(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateKeyRequest* /*request*/, ::ownmfa::api::CreateKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateKey(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteKey() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteKey(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteKey(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListKeys() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListKeys(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListKeys(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListKeysRequest* /*request*/, ::ownmfa::api::ListKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListKeys(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Login() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ownmfa::api::LoginRequest, ::ownmfa::api::LoginResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ownmfa::api::LoginRequest, ::ownmfa::api::LoginResponse>* streamer) {
                       return this->StreamedLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::ownmfa::api::LoginRequest* /*request*/, ::ownmfa::api::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ownmfa::api::LoginRequest,::ownmfa::api::LoginResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateKey() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ownmfa::api::CreateKeyRequest, ::ownmfa::api::CreateKeyResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ownmfa::api::CreateKeyRequest, ::ownmfa::api::CreateKeyResponse>* streamer) {
                       return this->StreamedCreateKey(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::CreateKeyRequest* /*request*/, ::ownmfa::api::CreateKeyResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ownmfa::api::CreateKeyRequest,::ownmfa::api::CreateKeyResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteKey : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteKey() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ownmfa::api::DeleteKeyRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ownmfa::api::DeleteKeyRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteKey(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteKey() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteKey(::grpc::ServerContext* /*context*/, const ::ownmfa::api::DeleteKeyRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteKey(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ownmfa::api::DeleteKeyRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListKeys : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListKeys() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ownmfa::api::ListKeysRequest, ::ownmfa::api::ListKeysResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ownmfa::api::ListKeysRequest, ::ownmfa::api::ListKeysResponse>* streamer) {
                       return this->StreamedListKeys(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListKeys() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListKeys(::grpc::ServerContext* /*context*/, const ::ownmfa::api::ListKeysRequest* /*request*/, ::ownmfa::api::ListKeysResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListKeys(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ownmfa::api::ListKeysRequest,::ownmfa::api::ListKeysResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_CreateKey<WithStreamedUnaryMethod_DeleteKey<WithStreamedUnaryMethod_ListKeys<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_CreateKey<WithStreamedUnaryMethod_DeleteKey<WithStreamedUnaryMethod_ListKeys<Service > > > > StreamedService;
};

}  // namespace api
}  // namespace ownmfa


#endif  // GRPC_api_2fownmfa_5fsession_2eproto__INCLUDED
