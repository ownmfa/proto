// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: api/ownmfa_app_identity.proto

package api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// IdentityStatus represents the status of an identity.
type IdentityStatus int32

const (
	// Identity is not yet verified.
	IdentityStatus_UNVERIFIED IdentityStatus = 0
	// Identity has been activated.
	IdentityStatus_ACTIVATED IdentityStatus = 3
)

// Enum value maps for IdentityStatus.
var (
	IdentityStatus_name = map[int32]string{
		0: "UNVERIFIED",
		3: "ACTIVATED",
	}
	IdentityStatus_value = map[string]int32{
		"UNVERIFIED": 0,
		"ACTIVATED":  3,
	}
)

func (x IdentityStatus) Enum() *IdentityStatus {
	p := new(IdentityStatus)
	*p = x
	return p
}

func (x IdentityStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ownmfa_app_identity_proto_enumTypes[0].Descriptor()
}

func (IdentityStatus) Type() protoreflect.EnumType {
	return &file_api_ownmfa_app_identity_proto_enumTypes[0]
}

func (x IdentityStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityStatus.Descriptor instead.
func (IdentityStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{0}
}

// Hash represents a hash function.
type Hash int32

const (
	// SHA-2 512 bits.
	Hash_SHA512 Hash = 0
	// SHA-2 256 bits.
	Hash_SHA256 Hash = 1
	// SHA-1.
	Hash_SHA1 Hash = 2
)

// Enum value maps for Hash.
var (
	Hash_name = map[int32]string{
		0: "SHA512",
		1: "SHA256",
		2: "SHA1",
	}
	Hash_value = map[string]int32{
		"SHA512": 0,
		"SHA256": 1,
		"SHA1":   2,
	}
)

func (x Hash) Enum() *Hash {
	p := new(Hash)
	*p = x
	return p
}

func (x Hash) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Hash) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ownmfa_app_identity_proto_enumTypes[1].Descriptor()
}

func (Hash) Type() protoreflect.EnumType {
	return &file_api_ownmfa_app_identity_proto_enumTypes[1]
}

func (x Hash) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Hash.Descriptor instead.
func (Hash) EnumDescriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{1}
}

// App represents an application as stored in the database.
type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Application ID (UUID).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Organization ID (UUID).
	OrgId string `protobuf:"bytes,2,opt,name=org_id,json=orgID,proto3" json:"org_id,omitempty"`
	// Application name.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Application display name. Used anywhere the application is shown to an external user, including templates and notification sender fields.
	DisplayName string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Application email. Optional, used as the 'From' address in email notifications.
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// Pushover application key. If not specified, the default OwnMFA Pushover application and templates will be used.
	PushoverKey string `protobuf:"bytes,6,opt,name=pushover_key,json=pushoverKey,proto3" json:"pushover_key,omitempty"`
	// Application subject template. Templates generate HTML-safe output using the [Go template engine](https://golang.org/pkg/html/template/). The variables available for substitution is '{{.displayName}}'. Optional field, for notification methods that support subjects.
	SubjectTemplate string `protobuf:"bytes,7,opt,name=subject_template,json=subjectTemplate,proto3" json:"subject_template,omitempty"`
	// Application text body template. Templates generate HTML-safe output using the [Go template engine](https://golang.org/pkg/html/template/). The variables available for substitution are '{{.displayName}}' and '{{.passcode}}'. Optional field, for notification methods that support text bodies. To prevent fraud, SMS notifications used a fixed body that includes the application display_name and verification code.
	TextBodyTemplate string `protobuf:"bytes,8,opt,name=text_body_template,json=textBodyTemplate,proto3" json:"text_body_template,omitempty"`
	// Application HTML body template. Templates generate HTML-safe output using the [Go template engine](https://golang.org/pkg/html/template/). The variables available for substitution are '{{.displayName}}' and '{{.passcode}}'. Optional field, for notification methods that support HTML bodies. When used in JSON, the value will be represented as a base64 string.
	HtmlBodyTemplate []byte `protobuf:"bytes,9,opt,name=html_body_template,json=htmlBodyTemplate,proto3" json:"html_body_template,omitempty"`
	// Application creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Application modification timestamp.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{0}
}

func (x *App) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *App) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *App) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *App) GetPushoverKey() string {
	if x != nil {
		return x.PushoverKey
	}
	return ""
}

func (x *App) GetSubjectTemplate() string {
	if x != nil {
		return x.SubjectTemplate
	}
	return ""
}

func (x *App) GetTextBodyTemplate() string {
	if x != nil {
		return x.TextBodyTemplate
	}
	return ""
}

func (x *App) GetHtmlBodyTemplate() []byte {
	if x != nil {
		return x.HtmlBodyTemplate
	}
	return nil
}

func (x *App) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *App) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// CreateAppRequest is sent to create an application.
type CreateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// App message to create.
	App *App `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *CreateAppRequest) Reset() {
	*x = CreateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppRequest) ProtoMessage() {}

func (x *CreateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppRequest.ProtoReflect.Descriptor instead.
func (*CreateAppRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAppRequest) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

// GetAppRequest is sent to get an application.
type GetAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Application ID (UUID) to get.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAppRequest) Reset() {
	*x = GetAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppRequest) ProtoMessage() {}

func (x *GetAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppRequest.ProtoReflect.Descriptor instead.
func (*GetAppRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{2}
}

func (x *GetAppRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// UpdateAppRequest is sent to update an application.
type UpdateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// App message to update.
	App *App `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	// Fields to update. Automatically populated by a PATCH request. If not present, a full resource update is performed.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateAppRequest) Reset() {
	*x = UpdateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppRequest) ProtoMessage() {}

func (x *UpdateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAppRequest) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *UpdateAppRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// DeleteAppRequest is sent to delete an application.
type DeleteAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Application ID (UUID) to delete.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAppRequest) Reset() {
	*x = DeleteAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppRequest) ProtoMessage() {}

func (x *DeleteAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAppRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ListAppsRequest is sent to list applications.
type ListAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of applications to retrieve in a single page. Defaults to 50 if not specified, with a maximum of 250.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token of the page to retrieve. If not specified, the first page of results will be returned. To request the next page of results, use next_page_token from the previous response.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListAppsRequest) Reset() {
	*x = ListAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsRequest) ProtoMessage() {}

func (x *ListAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsRequest.ProtoReflect.Descriptor instead.
func (*ListAppsRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{5}
}

func (x *ListAppsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAppsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListAppsResponse is sent in response to an application list.
type ListAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// App array, ordered by ascending created_at timestamp.
	Apps []*App `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	// Pagination token used to retrieve the next page of results. Not returned for the last page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of applications available.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListAppsResponse) Reset() {
	*x = ListAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAppsResponse) ProtoMessage() {}

func (x *ListAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAppsResponse.ProtoReflect.Descriptor instead.
func (*ListAppsResponse) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{6}
}

func (x *ListAppsResponse) GetApps() []*App {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *ListAppsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListAppsResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// SoftwareHOTPMethod configures a software OATH HOTP one-time password method.
type SoftwareHOTPMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Software HOTP hash function. Defaults to SHA512 if not specified.
	Hash Hash `protobuf:"varint,1,opt,name=hash,proto3,enum=ownmfa.api.Hash" json:"hash,omitempty"`
	// Passcode digits length. Defaults to 7 if not specified.
	Digits int32 `protobuf:"varint,2,opt,name=digits,proto3" json:"digits,omitempty"`
	// Software HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
	Counter int32 `protobuf:"varint,3,opt,name=counter,proto3" json:"counter,omitempty"`
	// Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code.
	AccountName string `protobuf:"bytes,4,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *SoftwareHOTPMethod) Reset() {
	*x = SoftwareHOTPMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoftwareHOTPMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareHOTPMethod) ProtoMessage() {}

func (x *SoftwareHOTPMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareHOTPMethod.ProtoReflect.Descriptor instead.
func (*SoftwareHOTPMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{7}
}

func (x *SoftwareHOTPMethod) GetHash() Hash {
	if x != nil {
		return x.Hash
	}
	return Hash_SHA512
}

func (x *SoftwareHOTPMethod) GetDigits() int32 {
	if x != nil {
		return x.Digits
	}
	return 0
}

func (x *SoftwareHOTPMethod) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *SoftwareHOTPMethod) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

// SoftwareTOTPMethod configures a software OATH TOTP one-time password method.
type SoftwareTOTPMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Software TOTP hash function. Defaults to SHA512 if not specified.
	Hash Hash `protobuf:"varint,1,opt,name=hash,proto3,enum=ownmfa.api.Hash" json:"hash,omitempty"`
	// Passcode digits length. Defaults to 7 if not specified.
	Digits int32 `protobuf:"varint,2,opt,name=digits,proto3" json:"digits,omitempty"`
	// Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code.
	AccountName string `protobuf:"bytes,3,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *SoftwareTOTPMethod) Reset() {
	*x = SoftwareTOTPMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoftwareTOTPMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareTOTPMethod) ProtoMessage() {}

func (x *SoftwareTOTPMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareTOTPMethod.ProtoReflect.Descriptor instead.
func (*SoftwareTOTPMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{8}
}

func (x *SoftwareTOTPMethod) GetHash() Hash {
	if x != nil {
		return x.Hash
	}
	return Hash_SHA512
}

func (x *SoftwareTOTPMethod) GetDigits() int32 {
	if x != nil {
		return x.Digits
	}
	return 0
}

func (x *SoftwareTOTPMethod) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

// GoogleAuthHOTPMethod configures a Google Authenticator HOTP one-time password method. This method is limited to 6-digit passcodes using the SHA1 hash function.
type GoogleAuthHOTPMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code.
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *GoogleAuthHOTPMethod) Reset() {
	*x = GoogleAuthHOTPMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAuthHOTPMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAuthHOTPMethod) ProtoMessage() {}

func (x *GoogleAuthHOTPMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAuthHOTPMethod.ProtoReflect.Descriptor instead.
func (*GoogleAuthHOTPMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{9}
}

func (x *GoogleAuthHOTPMethod) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

// GoogleAuthTOTPMethod configures a Google Authenticator or Microsoft Authenticator TOTP one-time password method. This method is limited to 6-digit passcodes using the SHA1 hash function.
type GoogleAuthTOTPMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account name, such as username or email, for inclusion in QR codes. This field is never saved. If not specified, only the application display name is included in the returned QR code.
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *GoogleAuthTOTPMethod) Reset() {
	*x = GoogleAuthTOTPMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleAuthTOTPMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleAuthTOTPMethod) ProtoMessage() {}

func (x *GoogleAuthTOTPMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleAuthTOTPMethod.ProtoReflect.Descriptor instead.
func (*GoogleAuthTOTPMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{10}
}

func (x *GoogleAuthTOTPMethod) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

// AppleiOSTOTPMethod configures an Apple iOS TOTP one-time password method.
type AppleiOSTOTPMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppleiOSTOTPMethod) Reset() {
	*x = AppleiOSTOTPMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppleiOSTOTPMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleiOSTOTPMethod) ProtoMessage() {}

func (x *AppleiOSTOTPMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleiOSTOTPMethod.ProtoReflect.Descriptor instead.
func (*AppleiOSTOTPMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{11}
}

// HardwareHOTPMethod configures a hardware OATH HOTP one-time password method.
type HardwareHOTPMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hardware HOTP hash function. Defaults to SHA512 if not specified.
	Hash Hash `protobuf:"varint,1,opt,name=hash,proto3,enum=ownmfa.api.Hash" json:"hash,omitempty"`
	// Passcode digits length.
	Digits int32 `protobuf:"varint,2,opt,name=digits,proto3" json:"digits,omitempty"`
	// Hardware HOTP starting counter. Only included during identity creation. Defaults to 0 if not specified.
	Counter int32 `protobuf:"varint,3,opt,name=counter,proto3" json:"counter,omitempty"`
	// Hardware HOTP secret. Only included during identity creation. When used in JSON, the value will be represented as a base64 string.
	Secret []byte `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *HardwareHOTPMethod) Reset() {
	*x = HardwareHOTPMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareHOTPMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareHOTPMethod) ProtoMessage() {}

func (x *HardwareHOTPMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareHOTPMethod.ProtoReflect.Descriptor instead.
func (*HardwareHOTPMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{12}
}

func (x *HardwareHOTPMethod) GetHash() Hash {
	if x != nil {
		return x.Hash
	}
	return Hash_SHA512
}

func (x *HardwareHOTPMethod) GetDigits() int32 {
	if x != nil {
		return x.Digits
	}
	return 0
}

func (x *HardwareHOTPMethod) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *HardwareHOTPMethod) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

// HardwareTOTPMethod configures a hardware OATH TOTP one-time password method.
type HardwareTOTPMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hardware TOTP hash function. Defaults to SHA512 if not specified.
	Hash Hash `protobuf:"varint,1,opt,name=hash,proto3,enum=ownmfa.api.Hash" json:"hash,omitempty"`
	// Passcode digits length.
	Digits int32 `protobuf:"varint,2,opt,name=digits,proto3" json:"digits,omitempty"`
	// Hardware TOTP secret. Only included during identity creation. When used in JSON, the value will be represented as a base64 string.
	Secret []byte `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *HardwareTOTPMethod) Reset() {
	*x = HardwareTOTPMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HardwareTOTPMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwareTOTPMethod) ProtoMessage() {}

func (x *HardwareTOTPMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwareTOTPMethod.ProtoReflect.Descriptor instead.
func (*HardwareTOTPMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{13}
}

func (x *HardwareTOTPMethod) GetHash() Hash {
	if x != nil {
		return x.Hash
	}
	return Hash_SHA512
}

func (x *HardwareTOTPMethod) GetDigits() int32 {
	if x != nil {
		return x.Digits
	}
	return 0
}

func (x *HardwareTOTPMethod) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

// SMSMethod configures an SMS passcode method.
type SMSMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Phone number. Must be in valid [E.164](https://www.twilio.com/docs/glossary/what-e164) format.
	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *SMSMethod) Reset() {
	*x = SMSMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSMethod) ProtoMessage() {}

func (x *SMSMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSMethod.ProtoReflect.Descriptor instead.
func (*SMSMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{14}
}

func (x *SMSMethod) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// PushoverMethod configures a Pushover passcode method.
type PushoverMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Pushover user key.
	PushoverKey string `protobuf:"bytes,1,opt,name=pushover_key,json=pushoverKey,proto3" json:"pushover_key,omitempty"`
}

func (x *PushoverMethod) Reset() {
	*x = PushoverMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushoverMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushoverMethod) ProtoMessage() {}

func (x *PushoverMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushoverMethod.ProtoReflect.Descriptor instead.
func (*PushoverMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{15}
}

func (x *PushoverMethod) GetPushoverKey() string {
	if x != nil {
		return x.PushoverKey
	}
	return ""
}

// EmailMethod configures an email passcode method.
type EmailMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Email address.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailMethod) Reset() {
	*x = EmailMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMethod) ProtoMessage() {}

func (x *EmailMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMethod.ProtoReflect.Descriptor instead.
func (*EmailMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{16}
}

func (x *EmailMethod) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// BackupsCodesMethod configures a backup codes method. Identities using this method are immediately activated and do not require activation.
type BackupsCodesMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of passcodes provided.
	Passcodes int32 `protobuf:"varint,1,opt,name=passcodes,proto3" json:"passcodes,omitempty"`
}

func (x *BackupsCodesMethod) Reset() {
	*x = BackupsCodesMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupsCodesMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupsCodesMethod) ProtoMessage() {}

func (x *BackupsCodesMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupsCodesMethod.ProtoReflect.Descriptor instead.
func (*BackupsCodesMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{17}
}

func (x *BackupsCodesMethod) GetPasscodes() int32 {
	if x != nil {
		return x.Passcodes
	}
	return 0
}

// SecurityQuestionsMethod configures a security questions method. Identities using this method are immediately activated and do not require activation.
type SecurityQuestionsMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Answer to the security question. Only included during identity creation. The security question should be stored out-of-band and queried of an external user by the consuming application.
	Answer string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *SecurityQuestionsMethod) Reset() {
	*x = SecurityQuestionsMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityQuestionsMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityQuestionsMethod) ProtoMessage() {}

func (x *SecurityQuestionsMethod) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityQuestionsMethod.ProtoReflect.Descriptor instead.
func (*SecurityQuestionsMethod) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{18}
}

func (x *SecurityQuestionsMethod) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

// Identity represents an identity as stored in the database.
type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity ID (UUID).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Organization ID (UUID).
	OrgId string `protobuf:"bytes,2,opt,name=org_id,json=orgID,proto3" json:"org_id,omitempty"`
	// Application ID (UUID).
	AppId string `protobuf:"bytes,3,opt,name=app_id,json=appID,proto3" json:"app_id,omitempty"`
	// Identity comment. This should be an opaque identifier known to the consuming application.
	Comment string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	// Identity status.
	Status IdentityStatus `protobuf:"varint,5,opt,name=status,proto3,enum=ownmfa.api.IdentityStatus" json:"status,omitempty"`
	// Identity method.
	//
	// Types that are assignable to MethodOneof:
	//
	//	*Identity_SoftwareHotpMethod
	//	*Identity_SoftwareTotpMethod
	//	*Identity_GoogleAuthHotpMethod
	//	*Identity_GoogleAuthTotpMethod
	//	*Identity_AppleIosTotpMethod
	//	*Identity_HardwareHotpMethod
	//	*Identity_HardwareTotpMethod
	//	*Identity_SmsMethod
	//	*Identity_PushoverMethod
	//	*Identity_EmailMethod
	//	*Identity_BackupCodesMethod
	//	*Identity_SecurityQuestionsMethod
	MethodOneof isIdentity_MethodOneof `protobuf_oneof:"method_oneof"`
	// Identity creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Identity modification timestamp.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{19}
}

func (x *Identity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Identity) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *Identity) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Identity) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Identity) GetStatus() IdentityStatus {
	if x != nil {
		return x.Status
	}
	return IdentityStatus_UNVERIFIED
}

func (m *Identity) GetMethodOneof() isIdentity_MethodOneof {
	if m != nil {
		return m.MethodOneof
	}
	return nil
}

func (x *Identity) GetSoftwareHotpMethod() *SoftwareHOTPMethod {
	if x, ok := x.GetMethodOneof().(*Identity_SoftwareHotpMethod); ok {
		return x.SoftwareHotpMethod
	}
	return nil
}

func (x *Identity) GetSoftwareTotpMethod() *SoftwareTOTPMethod {
	if x, ok := x.GetMethodOneof().(*Identity_SoftwareTotpMethod); ok {
		return x.SoftwareTotpMethod
	}
	return nil
}

func (x *Identity) GetGoogleAuthHotpMethod() *GoogleAuthHOTPMethod {
	if x, ok := x.GetMethodOneof().(*Identity_GoogleAuthHotpMethod); ok {
		return x.GoogleAuthHotpMethod
	}
	return nil
}

func (x *Identity) GetGoogleAuthTotpMethod() *GoogleAuthTOTPMethod {
	if x, ok := x.GetMethodOneof().(*Identity_GoogleAuthTotpMethod); ok {
		return x.GoogleAuthTotpMethod
	}
	return nil
}

func (x *Identity) GetAppleIosTotpMethod() *AppleiOSTOTPMethod {
	if x, ok := x.GetMethodOneof().(*Identity_AppleIosTotpMethod); ok {
		return x.AppleIosTotpMethod
	}
	return nil
}

func (x *Identity) GetHardwareHotpMethod() *HardwareHOTPMethod {
	if x, ok := x.GetMethodOneof().(*Identity_HardwareHotpMethod); ok {
		return x.HardwareHotpMethod
	}
	return nil
}

func (x *Identity) GetHardwareTotpMethod() *HardwareTOTPMethod {
	if x, ok := x.GetMethodOneof().(*Identity_HardwareTotpMethod); ok {
		return x.HardwareTotpMethod
	}
	return nil
}

func (x *Identity) GetSmsMethod() *SMSMethod {
	if x, ok := x.GetMethodOneof().(*Identity_SmsMethod); ok {
		return x.SmsMethod
	}
	return nil
}

func (x *Identity) GetPushoverMethod() *PushoverMethod {
	if x, ok := x.GetMethodOneof().(*Identity_PushoverMethod); ok {
		return x.PushoverMethod
	}
	return nil
}

func (x *Identity) GetEmailMethod() *EmailMethod {
	if x, ok := x.GetMethodOneof().(*Identity_EmailMethod); ok {
		return x.EmailMethod
	}
	return nil
}

func (x *Identity) GetBackupCodesMethod() *BackupsCodesMethod {
	if x, ok := x.GetMethodOneof().(*Identity_BackupCodesMethod); ok {
		return x.BackupCodesMethod
	}
	return nil
}

func (x *Identity) GetSecurityQuestionsMethod() *SecurityQuestionsMethod {
	if x, ok := x.GetMethodOneof().(*Identity_SecurityQuestionsMethod); ok {
		return x.SecurityQuestionsMethod
	}
	return nil
}

func (x *Identity) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Identity) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type isIdentity_MethodOneof interface {
	isIdentity_MethodOneof()
}

type Identity_SoftwareHotpMethod struct {
	// Software HOTP method configuration.
	SoftwareHotpMethod *SoftwareHOTPMethod `protobuf:"bytes,16,opt,name=software_hotp_method,json=softwareHOTPMethod,proto3,oneof"`
}

type Identity_SoftwareTotpMethod struct {
	// Software TOTP method configuration.
	SoftwareTotpMethod *SoftwareTOTPMethod `protobuf:"bytes,6,opt,name=software_totp_method,json=softwareTOTPMethod,proto3,oneof"`
}

type Identity_GoogleAuthHotpMethod struct {
	// Google Authenticator HOTP method configuration.
	GoogleAuthHotpMethod *GoogleAuthHOTPMethod `protobuf:"bytes,17,opt,name=google_auth_hotp_method,json=googleAuthHOTPMethod,proto3,oneof"`
}

type Identity_GoogleAuthTotpMethod struct {
	// Google Authenticator TOTP method configuration.
	GoogleAuthTotpMethod *GoogleAuthTOTPMethod `protobuf:"bytes,7,opt,name=google_auth_totp_method,json=googleAuthTOTPMethod,proto3,oneof"`
}

type Identity_AppleIosTotpMethod struct {
	// Apple iOS TOTP method configuration.
	AppleIosTotpMethod *AppleiOSTOTPMethod `protobuf:"bytes,22,opt,name=apple_ios_totp_method,json=appleiOSTOTPMethod,proto3,oneof"`
}

type Identity_HardwareHotpMethod struct {
	// Hardware HOTP method configuration.
	HardwareHotpMethod *HardwareHOTPMethod `protobuf:"bytes,18,opt,name=hardware_hotp_method,json=hardwareHOTPMethod,proto3,oneof"`
}

type Identity_HardwareTotpMethod struct {
	// Hardware TOTP method configuration.
	HardwareTotpMethod *HardwareTOTPMethod `protobuf:"bytes,19,opt,name=hardware_totp_method,json=hardwareTOTPMethod,proto3,oneof"`
}

type Identity_SmsMethod struct {
	// SMS method configuration.
	SmsMethod *SMSMethod `protobuf:"bytes,8,opt,name=sms_method,json=smsMethod,proto3,oneof"`
}

type Identity_PushoverMethod struct {
	// Pushover method configuration.
	PushoverMethod *PushoverMethod `protobuf:"bytes,20,opt,name=pushover_method,json=pushoverMethod,proto3,oneof"`
}

type Identity_EmailMethod struct {
	// Email method configuration.
	EmailMethod *EmailMethod `protobuf:"bytes,9,opt,name=email_method,json=emailMethod,proto3,oneof"`
}

type Identity_BackupCodesMethod struct {
	// Backups codes method configuration.
	BackupCodesMethod *BackupsCodesMethod `protobuf:"bytes,10,opt,name=backup_codes_method,json=backupCodesMethod,proto3,oneof"`
}

type Identity_SecurityQuestionsMethod struct {
	// Security questions method configuration.
	SecurityQuestionsMethod *SecurityQuestionsMethod `protobuf:"bytes,21,opt,name=security_questions_method,json=securityQuestionsMethod,proto3,oneof"`
}

func (*Identity_SoftwareHotpMethod) isIdentity_MethodOneof() {}

func (*Identity_SoftwareTotpMethod) isIdentity_MethodOneof() {}

func (*Identity_GoogleAuthHotpMethod) isIdentity_MethodOneof() {}

func (*Identity_GoogleAuthTotpMethod) isIdentity_MethodOneof() {}

func (*Identity_AppleIosTotpMethod) isIdentity_MethodOneof() {}

func (*Identity_HardwareHotpMethod) isIdentity_MethodOneof() {}

func (*Identity_HardwareTotpMethod) isIdentity_MethodOneof() {}

func (*Identity_SmsMethod) isIdentity_MethodOneof() {}

func (*Identity_PushoverMethod) isIdentity_MethodOneof() {}

func (*Identity_EmailMethod) isIdentity_MethodOneof() {}

func (*Identity_BackupCodesMethod) isIdentity_MethodOneof() {}

func (*Identity_SecurityQuestionsMethod) isIdentity_MethodOneof() {}

// CreateIdentityRequest is sent to create an identity.
type CreateIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity message to create.
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
}

func (x *CreateIdentityRequest) Reset() {
	*x = CreateIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityRequest) ProtoMessage() {}

func (x *CreateIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityRequest.ProtoReflect.Descriptor instead.
func (*CreateIdentityRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{20}
}

func (x *CreateIdentityRequest) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

// CreateIdentityResponse is sent in response to an identity creation.
type CreateIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity message created.
	Identity *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Secret in base32 format, for identity methods that provide secrets. Only returned once, upon identity creation.
	Secret string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	// Identity QR code, in Google Authenticator-compatible format, as a PNG image. For identity methods that provide secrets. Only returned once, upon identity creation. When used in JSON, the value will be represented as a base64 string.
	Qr []byte `protobuf:"bytes,3,opt,name=qr,proto3" json:"qr,omitempty"`
	// Passcode array, for identity methods that provide pregenerated passcodes. Only returned once, upon identity creation.
	Passcodes []string `protobuf:"bytes,4,rep,name=passcodes,proto3" json:"passcodes,omitempty"`
}

func (x *CreateIdentityResponse) Reset() {
	*x = CreateIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIdentityResponse) ProtoMessage() {}

func (x *CreateIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIdentityResponse.ProtoReflect.Descriptor instead.
func (*CreateIdentityResponse) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{21}
}

func (x *CreateIdentityResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *CreateIdentityResponse) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *CreateIdentityResponse) GetQr() []byte {
	if x != nil {
		return x.Qr
	}
	return nil
}

func (x *CreateIdentityResponse) GetPasscodes() []string {
	if x != nil {
		return x.Passcodes
	}
	return nil
}

// ActivateIdentityRequest is sent to activate an identity.
type ActivateIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity ID (UUID) to activate.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Application ID (UUID).
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appID,proto3" json:"app_id,omitempty"`
	// Passcode for verification. For security questions identity methods, this is the answer to the security question.
	Passcode string `protobuf:"bytes,3,opt,name=passcode,proto3" json:"passcode,omitempty"`
}

func (x *ActivateIdentityRequest) Reset() {
	*x = ActivateIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateIdentityRequest) ProtoMessage() {}

func (x *ActivateIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateIdentityRequest.ProtoReflect.Descriptor instead.
func (*ActivateIdentityRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{22}
}

func (x *ActivateIdentityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActivateIdentityRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ActivateIdentityRequest) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

// ChallengeIdentityRequest is sent to issue a challenge to an identity.
type ChallengeIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity ID (UUID) to issue challenge. The rate limit for methods that send notifications is one challenge per identity every 30 seconds.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Application ID (UUID).
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appID,proto3" json:"app_id,omitempty"`
}

func (x *ChallengeIdentityRequest) Reset() {
	*x = ChallengeIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeIdentityRequest) ProtoMessage() {}

func (x *ChallengeIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeIdentityRequest.ProtoReflect.Descriptor instead.
func (*ChallengeIdentityRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{23}
}

func (x *ChallengeIdentityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChallengeIdentityRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// VerifyIdentityRequest is sent to verify an identity. If verification fails, the request does not automatically fall through to a backup codes method. Consuming applications should design a workflow that either explicitly verifies by backup codes or falls through on failure.
type VerifyIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity ID (UUID) to verify.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Application ID (UUID).
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appID,proto3" json:"app_id,omitempty"`
	// Passcode for verification. For security questions identity methods, this is the answer to the security question.
	Passcode string `protobuf:"bytes,3,opt,name=passcode,proto3" json:"passcode,omitempty"`
}

func (x *VerifyIdentityRequest) Reset() {
	*x = VerifyIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyIdentityRequest) ProtoMessage() {}

func (x *VerifyIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyIdentityRequest.ProtoReflect.Descriptor instead.
func (*VerifyIdentityRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{24}
}

func (x *VerifyIdentityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VerifyIdentityRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *VerifyIdentityRequest) GetPasscode() string {
	if x != nil {
		return x.Passcode
	}
	return ""
}

// GetIdentityRequest is sent to get an identity.
type GetIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity ID (UUID) to get. Identity method_oneof may be returned in simplified form.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Application ID (UUID).
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appID,proto3" json:"app_id,omitempty"`
}

func (x *GetIdentityRequest) Reset() {
	*x = GetIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdentityRequest) ProtoMessage() {}

func (x *GetIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdentityRequest.ProtoReflect.Descriptor instead.
func (*GetIdentityRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{25}
}

func (x *GetIdentityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetIdentityRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// DeleteIdentityRequest is sent to delete an identity.
type DeleteIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity ID (UUID) to delete.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Application ID (UUID).
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appID,proto3" json:"app_id,omitempty"`
}

func (x *DeleteIdentityRequest) Reset() {
	*x = DeleteIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdentityRequest) ProtoMessage() {}

func (x *DeleteIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdentityRequest.ProtoReflect.Descriptor instead.
func (*DeleteIdentityRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteIdentityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteIdentityRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// ListIdentitiesRequest is sent to list identities.
type ListIdentitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of identities to retrieve in a single page. Defaults to 50 if not specified, with a maximum of 250.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token of the page to retrieve. If not specified, the first page of results will be returned. To request the next page of results, use next_page_token from the previous response.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Application ID (UUID). If not specified, all rules are included.
	AppId string `protobuf:"bytes,3,opt,name=app_id,json=appID,proto3" json:"app_id,omitempty"`
}

func (x *ListIdentitiesRequest) Reset() {
	*x = ListIdentitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdentitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentitiesRequest) ProtoMessage() {}

func (x *ListIdentitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentitiesRequest.ProtoReflect.Descriptor instead.
func (*ListIdentitiesRequest) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{27}
}

func (x *ListIdentitiesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListIdentitiesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListIdentitiesRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// ListIdentitiesResponse is sent in response to an identity list.
type ListIdentitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identity array, ordered by ascending created_at timestamp.
	Identities []*Identity `protobuf:"bytes,1,rep,name=identities,proto3" json:"identities,omitempty"`
	// Pagination token used to retrieve the next page of results. Not returned for the last page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of identities available.
	TotalSize int32 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListIdentitiesResponse) Reset() {
	*x = ListIdentitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ownmfa_app_identity_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdentitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdentitiesResponse) ProtoMessage() {}

func (x *ListIdentitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_ownmfa_app_identity_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdentitiesResponse.ProtoReflect.Descriptor instead.
func (*ListIdentitiesResponse) Descriptor() ([]byte, []int) {
	return file_api_ownmfa_app_identity_proto_rawDescGZIP(), []int{28}
}

func (x *ListIdentitiesResponse) GetIdentities() []*Identity {
	if x != nil {
		return x.Identities
	}
	return nil
}

func (x *ListIdentitiesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListIdentitiesResponse) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

var File_api_ownmfa_app_identity_proto protoreflect.FileDescriptor

var file_api_ownmfa_app_identity_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x03, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x05, 0x18, 0x28, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x05, 0x18, 0x50, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0xd0,
	0x01, 0x01, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x0c, 0x70,
	0x75, 0x73, 0x68, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x2d, 0x52, 0x0b, 0x70, 0x75, 0x73, 0x68,
	0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x08, 0x52, 0x0f, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x12,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0x80, 0x20, 0x52, 0x10, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x12, 0x68, 0x74, 0x6d, 0x6c, 0x5f, 0x62, 0x6f, 0x64,
	0x79, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x7a, 0x03, 0x18, 0x80, 0x20, 0x52, 0x10, 0x68, 0x74, 0x6d, 0x6c,
	0x42, 0x6f, 0x64, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x42, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x0b,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x61, 0x70, 0x70,
	0x22, 0x2c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe0,
	0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7f,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70,
	0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x61,
	0x70, 0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22,
	0x2f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x57, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x18, 0xfa, 0x01,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7e, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x77,
	0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x12, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x48, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x24, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18, 0x0a, 0x28,
	0x06, 0x40, 0x01, 0x52, 0x06, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x18, 0x50, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x8b, 0x01, 0x0a, 0x12, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x54, 0x4f,
	0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x23,
	0x0a, 0x06, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b,
	0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18, 0x0a, 0x28, 0x06, 0x40, 0x01, 0x52, 0x06, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x18, 0x50, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x42, 0x0a, 0x14, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x48, 0x4f, 0x54,
	0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x18, 0x50, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x54, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x50, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x65,
	0x69, 0x4f, 0x53, 0x54, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x98, 0x01,
	0x0a, 0x12, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x48, 0x4f, 0x54, 0x50, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x06, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a,
	0x04, 0x18, 0x0a, 0x28, 0x06, 0x52, 0x06, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x10, 0x10,
	0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x7e, 0x0a, 0x12, 0x48, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x54, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x24,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6f,
	0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x0a, 0x28, 0x06, 0x52,
	0x06, 0x64, 0x69, 0x67, 0x69, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x10, 0x10,
	0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x2c, 0x0a, 0x09, 0x53, 0x4d, 0x53, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x10, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x50, 0x75, 0x73, 0x68, 0x6f, 0x76,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x0c, 0x70, 0x75, 0x73, 0x68,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x19, 0x18, 0x2d, 0x52, 0x0b, 0x70, 0x75, 0x73, 0x68, 0x6f,
	0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x2c, 0x0a, 0x0b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x3d, 0x0a, 0x12, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x09, 0x70, 0x61,
	0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x1a, 0x04, 0x18, 0x0a, 0x28, 0x06, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x17, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x21,
	0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x50, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x22, 0x9a, 0x0a, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x05, 0x18, 0x50, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x14,
	0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x68, 0x6f, 0x74, 0x70, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x77, 0x6e,
	0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x48, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x12, 0x73, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x48, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x52, 0x0a, 0x14, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x74,
	0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x66, 0x74,
	0x77, 0x61, 0x72, 0x65, 0x54, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00,
	0x52, 0x12, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x54, 0x4f, 0x54, 0x50, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x59, 0x0a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x68, 0x6f, 0x74, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x48, 0x4f, 0x54,
	0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x14, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x48, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x59, 0x0a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74,
	0x6f, 0x74, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x54, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x48, 0x00, 0x52, 0x14, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x53, 0x0a, 0x15, 0x61, 0x70,
	0x70, 0x6c, 0x65, 0x5f, 0x69, 0x6f, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x70, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x77, 0x6e, 0x6d,
	0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x69, 0x4f, 0x53, 0x54,
	0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x12, 0x61, 0x70, 0x70,
	0x6c, 0x65, 0x69, 0x4f, 0x53, 0x54, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x52, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x68, 0x6f, 0x74, 0x70,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x48, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52,
	0x12, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x48, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x52, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f,
	0x74, 0x6f, 0x74, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x4f, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x48, 0x00, 0x52, 0x12, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x4f, 0x54,
	0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x6d, 0x73, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x77,
	0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x4d, 0x53, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x45, 0x0a, 0x0f, 0x70, 0x75, 0x73, 0x68, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x75, 0x73, 0x68, 0x6f, 0x76, 0x65, 0x72,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3c, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f,
	0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x50, 0x0a, 0x13, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x48, 0x00, 0x52, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x61, 0x0a, 0x19, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x77, 0x6e, 0x6d,
	0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00,
	0x52, 0x17, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x13, 0x0a, 0x0c, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x56,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x77, 0x6e, 0x6d,
	0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42,
	0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x71,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x71, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x06,
	0x72, 0x04, 0x10, 0x03, 0x18, 0x50, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x5b, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x22, 0x82, 0x01,
	0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x50, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x55, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a, 0x03, 0x18, 0xfa, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x72, 0x06, 0xd0, 0x01, 0x01, 0xb0, 0x01, 0x01,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x2a,
	0x2f, 0x0a, 0x0e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x2a, 0x28, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x35,
	0x31, 0x32, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x48, 0x41, 0x31, 0x10, 0x02, 0x32, 0x92, 0x0e, 0x0a, 0x12, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x92, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12,
	0x1c, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e,
	0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x22, 0x56,
	0x92, 0x41, 0x36, 0x4a, 0x34, 0x0a, 0x03, 0x32, 0x30, 0x31, 0x12, 0x2d, 0x0a, 0x16, 0x41, 0x20,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x12, 0x13, 0x0a, 0x11, 0x1a, 0x0f, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a,
	0x03, 0x61, 0x70, 0x70, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xe5, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21, 0x2e, 0x6f, 0x77, 0x6e, 0x6d,
	0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f,
	0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x8b, 0x01, 0x92, 0x41, 0x49, 0x4a, 0x47, 0x0a, 0x03, 0x32, 0x30, 0x31, 0x12, 0x40, 0x0a,
	0x16, 0x41, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x20, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x12, 0x26, 0x0a, 0x24, 0x1a, 0x22, 0x2e, 0x6f, 0x77,
	0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x39, 0x3a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x8c,
	0x01, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x23, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x3d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x3a, 0x01, 0x2a, 0x1a, 0x32, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0xd8, 0x01,
	0x0a, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x84, 0x01, 0x92, 0x41, 0x46, 0x4a, 0x21, 0x0a, 0x03, 0x32, 0x30, 0x32, 0x12, 0x1a,
	0x0a, 0x16, 0x41, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x20, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x12, 0x00, 0x4a, 0x21, 0x0a, 0x03, 0x32, 0x30,
	0x34, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x20, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75,
	0x6c, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x12, 0x00, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x35, 0x22, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x0e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21, 0x2e, 0x6f, 0x77,
	0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01,
	0x2a, 0x22, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x53, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x12, 0x19, 0x2e,
	0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x76, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x84, 0x01, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x1c,
	0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6f,
	0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x70, 0x22, 0x48, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x42, 0x3a, 0x03, 0x61, 0x70, 0x70, 0x5a, 0x20, 0x3a, 0x03, 0x61, 0x70,
	0x70, 0x32, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x2e, 0x69, 0x64, 0x7d, 0x1a, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x61, 0x70, 0x70, 0x2e, 0x69, 0x64, 0x7d, 0x12, 0x86, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x1c, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x43, 0x92, 0x41, 0x23,
	0x4a, 0x21, 0x0a, 0x03, 0x32, 0x30, 0x34, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x20, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0xa4, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x21, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x57,
	0x92, 0x41, 0x23, 0x4a, 0x21, 0x0a, 0x03, 0x32, 0x30, 0x34, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x20,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x20, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x12, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x2a, 0x29, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5f, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x70, 0x70, 0x73, 0x12, 0x1b, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xa4, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x6f, 0x77,
	0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6f, 0x77, 0x6e, 0x6d, 0x66, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x45, 0x5a, 0x1d, 0x12, 0x1b, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42,
	0x1e, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x77,
	0x6e, 0x6d, 0x66, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_ownmfa_app_identity_proto_rawDescOnce sync.Once
	file_api_ownmfa_app_identity_proto_rawDescData = file_api_ownmfa_app_identity_proto_rawDesc
)

func file_api_ownmfa_app_identity_proto_rawDescGZIP() []byte {
	file_api_ownmfa_app_identity_proto_rawDescOnce.Do(func() {
		file_api_ownmfa_app_identity_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_ownmfa_app_identity_proto_rawDescData)
	})
	return file_api_ownmfa_app_identity_proto_rawDescData
}

var file_api_ownmfa_app_identity_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_ownmfa_app_identity_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_api_ownmfa_app_identity_proto_goTypes = []interface{}{
	(IdentityStatus)(0),              // 0: ownmfa.api.IdentityStatus
	(Hash)(0),                        // 1: ownmfa.api.Hash
	(*App)(nil),                      // 2: ownmfa.api.App
	(*CreateAppRequest)(nil),         // 3: ownmfa.api.CreateAppRequest
	(*GetAppRequest)(nil),            // 4: ownmfa.api.GetAppRequest
	(*UpdateAppRequest)(nil),         // 5: ownmfa.api.UpdateAppRequest
	(*DeleteAppRequest)(nil),         // 6: ownmfa.api.DeleteAppRequest
	(*ListAppsRequest)(nil),          // 7: ownmfa.api.ListAppsRequest
	(*ListAppsResponse)(nil),         // 8: ownmfa.api.ListAppsResponse
	(*SoftwareHOTPMethod)(nil),       // 9: ownmfa.api.SoftwareHOTPMethod
	(*SoftwareTOTPMethod)(nil),       // 10: ownmfa.api.SoftwareTOTPMethod
	(*GoogleAuthHOTPMethod)(nil),     // 11: ownmfa.api.GoogleAuthHOTPMethod
	(*GoogleAuthTOTPMethod)(nil),     // 12: ownmfa.api.GoogleAuthTOTPMethod
	(*AppleiOSTOTPMethod)(nil),       // 13: ownmfa.api.AppleiOSTOTPMethod
	(*HardwareHOTPMethod)(nil),       // 14: ownmfa.api.HardwareHOTPMethod
	(*HardwareTOTPMethod)(nil),       // 15: ownmfa.api.HardwareTOTPMethod
	(*SMSMethod)(nil),                // 16: ownmfa.api.SMSMethod
	(*PushoverMethod)(nil),           // 17: ownmfa.api.PushoverMethod
	(*EmailMethod)(nil),              // 18: ownmfa.api.EmailMethod
	(*BackupsCodesMethod)(nil),       // 19: ownmfa.api.BackupsCodesMethod
	(*SecurityQuestionsMethod)(nil),  // 20: ownmfa.api.SecurityQuestionsMethod
	(*Identity)(nil),                 // 21: ownmfa.api.Identity
	(*CreateIdentityRequest)(nil),    // 22: ownmfa.api.CreateIdentityRequest
	(*CreateIdentityResponse)(nil),   // 23: ownmfa.api.CreateIdentityResponse
	(*ActivateIdentityRequest)(nil),  // 24: ownmfa.api.ActivateIdentityRequest
	(*ChallengeIdentityRequest)(nil), // 25: ownmfa.api.ChallengeIdentityRequest
	(*VerifyIdentityRequest)(nil),    // 26: ownmfa.api.VerifyIdentityRequest
	(*GetIdentityRequest)(nil),       // 27: ownmfa.api.GetIdentityRequest
	(*DeleteIdentityRequest)(nil),    // 28: ownmfa.api.DeleteIdentityRequest
	(*ListIdentitiesRequest)(nil),    // 29: ownmfa.api.ListIdentitiesRequest
	(*ListIdentitiesResponse)(nil),   // 30: ownmfa.api.ListIdentitiesResponse
	(*timestamppb.Timestamp)(nil),    // 31: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),    // 32: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),            // 33: google.protobuf.Empty
}
var file_api_ownmfa_app_identity_proto_depIdxs = []int32{
	31, // 0: ownmfa.api.App.created_at:type_name -> google.protobuf.Timestamp
	31, // 1: ownmfa.api.App.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 2: ownmfa.api.CreateAppRequest.app:type_name -> ownmfa.api.App
	2,  // 3: ownmfa.api.UpdateAppRequest.app:type_name -> ownmfa.api.App
	32, // 4: ownmfa.api.UpdateAppRequest.update_mask:type_name -> google.protobuf.FieldMask
	2,  // 5: ownmfa.api.ListAppsResponse.apps:type_name -> ownmfa.api.App
	1,  // 6: ownmfa.api.SoftwareHOTPMethod.hash:type_name -> ownmfa.api.Hash
	1,  // 7: ownmfa.api.SoftwareTOTPMethod.hash:type_name -> ownmfa.api.Hash
	1,  // 8: ownmfa.api.HardwareHOTPMethod.hash:type_name -> ownmfa.api.Hash
	1,  // 9: ownmfa.api.HardwareTOTPMethod.hash:type_name -> ownmfa.api.Hash
	0,  // 10: ownmfa.api.Identity.status:type_name -> ownmfa.api.IdentityStatus
	9,  // 11: ownmfa.api.Identity.software_hotp_method:type_name -> ownmfa.api.SoftwareHOTPMethod
	10, // 12: ownmfa.api.Identity.software_totp_method:type_name -> ownmfa.api.SoftwareTOTPMethod
	11, // 13: ownmfa.api.Identity.google_auth_hotp_method:type_name -> ownmfa.api.GoogleAuthHOTPMethod
	12, // 14: ownmfa.api.Identity.google_auth_totp_method:type_name -> ownmfa.api.GoogleAuthTOTPMethod
	13, // 15: ownmfa.api.Identity.apple_ios_totp_method:type_name -> ownmfa.api.AppleiOSTOTPMethod
	14, // 16: ownmfa.api.Identity.hardware_hotp_method:type_name -> ownmfa.api.HardwareHOTPMethod
	15, // 17: ownmfa.api.Identity.hardware_totp_method:type_name -> ownmfa.api.HardwareTOTPMethod
	16, // 18: ownmfa.api.Identity.sms_method:type_name -> ownmfa.api.SMSMethod
	17, // 19: ownmfa.api.Identity.pushover_method:type_name -> ownmfa.api.PushoverMethod
	18, // 20: ownmfa.api.Identity.email_method:type_name -> ownmfa.api.EmailMethod
	19, // 21: ownmfa.api.Identity.backup_codes_method:type_name -> ownmfa.api.BackupsCodesMethod
	20, // 22: ownmfa.api.Identity.security_questions_method:type_name -> ownmfa.api.SecurityQuestionsMethod
	31, // 23: ownmfa.api.Identity.created_at:type_name -> google.protobuf.Timestamp
	31, // 24: ownmfa.api.Identity.updated_at:type_name -> google.protobuf.Timestamp
	21, // 25: ownmfa.api.CreateIdentityRequest.identity:type_name -> ownmfa.api.Identity
	21, // 26: ownmfa.api.CreateIdentityResponse.identity:type_name -> ownmfa.api.Identity
	21, // 27: ownmfa.api.ListIdentitiesResponse.identities:type_name -> ownmfa.api.Identity
	3,  // 28: ownmfa.api.AppIdentityService.CreateApp:input_type -> ownmfa.api.CreateAppRequest
	22, // 29: ownmfa.api.AppIdentityService.CreateIdentity:input_type -> ownmfa.api.CreateIdentityRequest
	24, // 30: ownmfa.api.AppIdentityService.ActivateIdentity:input_type -> ownmfa.api.ActivateIdentityRequest
	25, // 31: ownmfa.api.AppIdentityService.ChallengeIdentity:input_type -> ownmfa.api.ChallengeIdentityRequest
	26, // 32: ownmfa.api.AppIdentityService.VerifyIdentity:input_type -> ownmfa.api.VerifyIdentityRequest
	4,  // 33: ownmfa.api.AppIdentityService.GetApp:input_type -> ownmfa.api.GetAppRequest
	27, // 34: ownmfa.api.AppIdentityService.GetIdentity:input_type -> ownmfa.api.GetIdentityRequest
	5,  // 35: ownmfa.api.AppIdentityService.UpdateApp:input_type -> ownmfa.api.UpdateAppRequest
	6,  // 36: ownmfa.api.AppIdentityService.DeleteApp:input_type -> ownmfa.api.DeleteAppRequest
	28, // 37: ownmfa.api.AppIdentityService.DeleteIdentity:input_type -> ownmfa.api.DeleteIdentityRequest
	7,  // 38: ownmfa.api.AppIdentityService.ListApps:input_type -> ownmfa.api.ListAppsRequest
	29, // 39: ownmfa.api.AppIdentityService.ListIdentities:input_type -> ownmfa.api.ListIdentitiesRequest
	2,  // 40: ownmfa.api.AppIdentityService.CreateApp:output_type -> ownmfa.api.App
	23, // 41: ownmfa.api.AppIdentityService.CreateIdentity:output_type -> ownmfa.api.CreateIdentityResponse
	21, // 42: ownmfa.api.AppIdentityService.ActivateIdentity:output_type -> ownmfa.api.Identity
	33, // 43: ownmfa.api.AppIdentityService.ChallengeIdentity:output_type -> google.protobuf.Empty
	33, // 44: ownmfa.api.AppIdentityService.VerifyIdentity:output_type -> google.protobuf.Empty
	2,  // 45: ownmfa.api.AppIdentityService.GetApp:output_type -> ownmfa.api.App
	21, // 46: ownmfa.api.AppIdentityService.GetIdentity:output_type -> ownmfa.api.Identity
	2,  // 47: ownmfa.api.AppIdentityService.UpdateApp:output_type -> ownmfa.api.App
	33, // 48: ownmfa.api.AppIdentityService.DeleteApp:output_type -> google.protobuf.Empty
	33, // 49: ownmfa.api.AppIdentityService.DeleteIdentity:output_type -> google.protobuf.Empty
	8,  // 50: ownmfa.api.AppIdentityService.ListApps:output_type -> ownmfa.api.ListAppsResponse
	30, // 51: ownmfa.api.AppIdentityService.ListIdentities:output_type -> ownmfa.api.ListIdentitiesResponse
	40, // [40:52] is the sub-list for method output_type
	28, // [28:40] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_api_ownmfa_app_identity_proto_init() }
func file_api_ownmfa_app_identity_proto_init() {
	if File_api_ownmfa_app_identity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_ownmfa_app_identity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoftwareHOTPMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoftwareTOTPMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAuthHOTPMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoogleAuthTOTPMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppleiOSTOTPMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareHOTPMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HardwareTOTPMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushoverMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupsCodesMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityQuestionsMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdentitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ownmfa_app_identity_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdentitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_ownmfa_app_identity_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*Identity_SoftwareHotpMethod)(nil),
		(*Identity_SoftwareTotpMethod)(nil),
		(*Identity_GoogleAuthHotpMethod)(nil),
		(*Identity_GoogleAuthTotpMethod)(nil),
		(*Identity_AppleIosTotpMethod)(nil),
		(*Identity_HardwareHotpMethod)(nil),
		(*Identity_HardwareTotpMethod)(nil),
		(*Identity_SmsMethod)(nil),
		(*Identity_PushoverMethod)(nil),
		(*Identity_EmailMethod)(nil),
		(*Identity_BackupCodesMethod)(nil),
		(*Identity_SecurityQuestionsMethod)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_ownmfa_app_identity_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_ownmfa_app_identity_proto_goTypes,
		DependencyIndexes: file_api_ownmfa_app_identity_proto_depIdxs,
		EnumInfos:         file_api_ownmfa_app_identity_proto_enumTypes,
		MessageInfos:      file_api_ownmfa_app_identity_proto_msgTypes,
	}.Build()
	File_api_ownmfa_app_identity_proto = out.File
	file_api_ownmfa_app_identity_proto_rawDesc = nil
	file_api_ownmfa_app_identity_proto_goTypes = nil
	file_api_ownmfa_app_identity_proto_depIdxs = nil
}
